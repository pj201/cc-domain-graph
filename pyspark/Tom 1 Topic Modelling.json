{"paragraphs":[{"text":"%pyspark\n\n# PySpark CommonCrawl Topic Modelling\n# Tom V / Paul J - 14/11/2017\n\n# SET THE spark.driver.maxResultSize PROPERTY TO 3G\n\nimport boto\nfrom boto.s3.key import Key\nfrom gzipstream import GzipStreamFile\nfrom pyspark.sql.types import *\nimport warc\nimport ujson as json\nfrom urlparse import urlparse\nfrom langdetect import detect_langs\nimport pycld2 as cld2\n\nwetlist = sc.textFile(\"s3://commoncrawl/crawl-data/CC-MAIN-2017-04/wet.paths.gz\")\nwetlist.cache()\n\ndef unpack(uri):\n    conn = boto.connect_s3(anon=True, host='s3.amazonaws.com')\n    bucket = conn.get_bucket('commoncrawl')\n    key_ = Key(bucket, uri)\n    file_ = warc.WARCFile(fileobj=GzipStreamFile(key_))\n    return file_\n\ndef detect(x):\n    try:\n        return detect_langs(x)[0].lang # Maybe we can get away with looking at less characters, or do something less expensive?\n    except Exception as e:\n        return None\n        \ndef detect2(x):\n    try:\n        isReliable, textBytesFound, details = cld2.detect(x)\n        return details[0][1]\n    except Exception as e:\n        print(e)\n        return None\n\ndef process_wet(id_, iterator):\n    for uri in iterator:\n        file = unpack(uri)\n        for record in file: # Approx 53k web pages per WET file\n            try:\n                #url = record.rec_headers.get_header('WARC-Target-URI')\n                #yield record, record.content_stream().read().decode('utf-8')\n                url = record.url\n                domain = None if not url else urlparse(url).netloc\n                text = record.payload.read().decode('utf-8') #.limit(100) # TODO: Limit this read to ensure max length (for improving parallizability)\n                lang = detect2(text[:300]) # Use PyCLD2, not langdetect, which was killing performance!\n                yield domain, url, text, lang\n            except Exception as e:\n                yield e\n                \ndef process_wet_simple(id_, iterator):\n    count=0\n    for uri in iterator:\n        file = unpack(uri)\n        for record in file:\n            try:\n                count=count+1\n                # TODO: Output total size of pages, rather than number of pages\n                # Histogram.\n            except Exception as e:\n                pass\n        #print(count)\n        yield count","user":"anonymous","dateUpdated":"2017-11-14T21:59:32+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/python","editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1510694832022_1013314278","id":"20171020-102243_1718178582","dateCreated":"2017-11-14T21:27:12+0000","dateStarted":"2017-11-14T21:59:32+0000","dateFinished":"2017-11-14T22:00:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:196"},{"text":"%pyspark\ndetect2(\"this is a test\")","user":"anonymous","dateUpdated":"2017-11-14T21:59:32+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/python","editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"'en'\n"}]},"apps":[],"jobName":"paragraph_1510694832025_1010621036","id":"20171027-134322_549744379","dateCreated":"2017-11-14T21:27:12+0000","dateStarted":"2017-11-14T21:59:34+0000","dateFinished":"2017-11-14T22:00:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:197"},{"text":"%pyspark\n\n# PARAMETER - number of input files\nnfiles = 8192\n\n# PARAMETER - slices / partitions of input\nfiles = sc.parallelize(wetlist.take(nfiles), numSlices=nfiles)\n\n# TODO: Make this use more than one CPU!\nprint(files.getNumPartitions())\n#files.mapPartitionsWithIndex(process_wet_simple).collect()\nrdd=files.mapPartitionsWithIndex(process_wet)\n\nprint(str(rdd))\ndocs = rdd.toDF([\"domain\", \"url\", \"text\",\"lang\"]) #  \"lang\"\n#docs.cache()\ndocs.count()","user":"anonymous","dateUpdated":"2017-11-14T21:59:34+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/python","editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"8192\nPythonRDD[4] at RDD at PythonRDD.scala:48\n439854535\n"}]},"apps":[],"jobName":"paragraph_1510694832026_1011775283","id":"20171020-101220_2022546189","dateCreated":"2017-11-14T21:27:12+0000","dateStarted":"2017-11-14T22:00:04+0000","dateFinished":"2017-11-14T22:07:19+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:198"},{"text":"%pyspark\n\ndocs_en = docs.filter(docs.lang == 'en')\n#docs_en = docs\n\n# PARAMETER - possibly set partitions?\n#docs_en = docs_en.repartition(nfiles)\n#docs_en.rdd.getNumPartitions()\n#docs_en.sample(True,0.01).groupBy('lang').count().toPandas()\ndocs_en.count() # 87,842,898 for 4096 files; 175,615,933 for 8192 files.","user":"anonymous","dateUpdated":"2017-11-14T22:19:02+0000","config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/python","editorHide":false,"results":{"0":{"graph":{"mode":"table","height":93,"optionOpen":false}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"175615933\n"}]},"apps":[],"jobName":"paragraph_1510694832026_1011775283","id":"20171020-110218_1507019685","dateCreated":"2017-11-14T21:27:12+0000","dateStarted":"2017-11-14T22:00:05+0000","dateFinished":"2017-11-14T22:13:37+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:199"},{"text":"%pyspark\n\nstopwords_english = ['i', 'me', 'my', 'myself', 'we', 'our', 'ours', 'ourselves', 'you', 'your', 'yours', 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she', 'her', 'hers', 'herself', 'it', 'its', 'itself', 'they', 'them', 'their', 'theirs', 'themselves', 'what', 'which', 'who', 'whom', 'this', 'that', 'these', 'those', 'am', 'is', 'are', 'was', 'were', 'be', 'been', 'being', 'have', 'has', 'had', 'having', 'do', 'does', 'did', 'doing', 'a', 'an', 'the', 'and', 'but', 'if', 'or', 'because', 'as', 'until', 'while', 'of', 'at', 'by', 'for', 'with', 'about', 'against', 'between', 'into', 'through', 'during', 'before', 'after', 'above', 'below', 'to', 'from', 'up', 'down', 'in', 'out', 'on', 'off', 'over', 'under', 'again', 'further', 'then', 'once', 'here', 'there', 'when', 'where', 'why', 'how', 'all', 'any', 'both', 'each', 'few', 'more', 'most', 'other', 'some', 'such', 'no', 'nor', 'not', 'only', 'own', 'same', 'so', 'than', 'too', 'very', 's', 't', 'can', 'will', 'just', 'don', 'should', 'now', 'd', 'll', 'm', 'o', 're', 've', 'y', 'ain', 'aren', 'couldn', 'didn', 'doesn', 'hadn', 'hasn', 'haven', 'isn', 'ma', 'mightn', 'mustn', 'needn', 'shan', 'shouldn', 'wasn', 'weren', 'won', 'wouldn', 'com', 'nbsp']\n\nfrom pyspark.ml import Pipeline\nfrom pyspark.ml.feature import RegexTokenizer, CountVectorizer, StopWordsRemover\n\n# PARAMETER - regex tokenization\ntokenizer = RegexTokenizer(inputCol=\"text\", outputCol=\"words\", pattern=\"\\\\p{L}{3,}\", gaps=False)\nstopwordRemover = StopWordsRemover(inputCol=\"words\", outputCol=\"filtered\",stopWords=stopwords_english, caseSensitive=False)\n\n# PARAMETER - vocab size, min and max doc frequency\ncv = CountVectorizer(inputCol=\"filtered\", outputCol=\"vec\",vocabSize=50000, minDF=50) # reduced vocabSize from 100k to 20k to save memory\n\n# Run the model fitting and extract vectors\npipeline = Pipeline(stages=[tokenizer, stopwordRemover, cv])\nmodel = pipeline.fit(docs_en)\nvecs = model.transform(docs_en).drop('text').drop('words').drop('filtered')\nvecs.cache()\n#vecs.count()\n\n# Took 42 min 51 sec on m4.16xlarge with 1024 files, approx 2 hours on 5xr4.8xlarge with 4096 files, approx 20 mins on 18xr4.8xlarge with 8192 files.","user":"anonymous","dateUpdated":"2017-11-14T22:45:22+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/python","editorHide":false,"title":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"DataFrame[domain: string, url: string, lang: string, vec: vector]\n"}]},"apps":[],"jobName":"paragraph_1510694832027_1011390534","id":"20171020-101427_882065123","dateCreated":"2017-11-14T21:27:12+0000","dateStarted":"2017-11-14T22:07:19+0000","dateFinished":"2017-11-14T22:43:57+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:200"},{"text":"%pyspark\nsc.getConf().get('spark.driver.maxResultSize')","user":"anonymous","dateUpdated":"2017-11-14T21:59:34+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/python","editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"u'16g'\n"}]},"apps":[],"jobName":"paragraph_1510694832027_1011390534","id":"20171027-153123_778277811","dateCreated":"2017-11-14T21:27:12+0000","dateStarted":"2017-11-14T22:13:37+0000","dateFinished":"2017-11-14T22:43:57+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:201"},{"text":"%pyspark\nmodel.save('s3://billsdata.net/CommonCrawl/topic_model_%d_files/textmodel' % nfiles)\nvecs.write.parquet('s3://billsdata.net/CommonCrawl/topic_model_%d_files/cc_english_page_tf_vectors' % nfiles)","user":"anonymous","dateUpdated":"2017-11-14T21:59:34+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/python","editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1510694832028_1009466789","id":"20171027-145239_579746754","dateCreated":"2017-11-14T21:27:12+0000","dateStarted":"2017-11-14T22:43:57+0000","dateFinished":"2017-11-15T00:56:51+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:202"},{"title":"Skip to here to restart from saved vectors","text":"%pyspark\nfrom pyspark.ml.pipeline import PipelineModel\n\nnfiles = 8192\n\nmodel2 = PipelineModel.load('s3://billsdata.net/CommonCrawl/topic_model_%d_files/textmodel' % nfiles)\nvecs2 = spark.read.parquet('s3://billsdata.net/CommonCrawl/topic_model_%d_files/cc_english_page_tf_vectors' % nfiles)\n\nvecs2.show(10)","user":"anonymous","dateUpdated":"2017-11-14T21:59:34+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/python","editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+--------------------+----+--------------------+\n|              domain|                 url|lang|                 vec|\n+--------------------+--------------------+----+--------------------+\n|                null|                null|  en|(50000,[59,79,89,...|\n|1.cricwaves-hrd.a...|http://1.cricwave...|  en|(50000,[0,1,2,4,6...|\n|       1015store.com|http://1015store....|  en|(50000,[0,5,6,23,...|\n|101bestandroidapp...|http://101bestand...|  en|(50000,[0,3,4,5,6...|\n|101bestandroidapp...|http://101bestand...|  en|(50000,[0,3,4,6,7...|\n|1027jackfm.iheart...|http://1027jackfm...|  en|(50000,[0,3,4,5,8...|\n|     1057thehawk.com|http://1057thehaw...|  en|(50000,[0,1,2,4,5...|\n|     1063thebuzz.com|http://1063thebuz...|  en|(50000,[0,2,4,5,6...|\n|     1063thebuzz.com|http://1063thebuz...|  en|(50000,[0,2,4,5,8...|\n|  1190kex.iheart.com|http://1190kex.ih...|  en|(50000,[0,3,4,5,6...|\n+--------------------+--------------------+----+--------------------+\nonly showing top 10 rows\n\n"}]},"apps":[],"jobName":"paragraph_1510694832028_1009466789","id":"20171027-152148_622560673","dateCreated":"2017-11-14T21:27:12+0000","dateStarted":"2017-11-14T22:43:58+0000","dateFinished":"2017-11-15T00:56:58+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:203"},{"text":"%pyspark\nvecs2.cache()","user":"anonymous","dateUpdated":"2017-11-14T21:59:34+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/python","editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"DataFrame[domain: string, url: string, lang: string, vec: vector]\n"}]},"apps":[],"jobName":"paragraph_1510694832029_1009082041","id":"20171027-152858_769393097","dateCreated":"2017-11-14T21:27:12+0000","dateStarted":"2017-11-15T00:56:52+0000","dateFinished":"2017-11-15T00:56:58+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:204"},{"text":"%pyspark\n\n# Run the topic modelling\n\nfrom pyspark.ml.clustering import LDA\n#inputCol=\"vec\", outputCol=\"ldaVec\", k=3, optimizer=\"online\"\n\n# Fix java memory errors, perhaps using:\n# spark.driver.memory 256g - DIDN'T WORK\n# or by reducing vocabSize from 100k to 20k - WORKS!\n\n#With 128:\n#    Py4JJavaError: An error occurred while calling o375.fit.\n#: org.apache.spark.SparkException: Job 49 cancelled because SparkContext was shut down\n\nlda = LDA(k=100, maxIter=10, featuresCol=\"vec\") # Reduced maxIter from 100 to 50\nldaModel = lda.fit(vecs2)","user":"anonymous","dateUpdated":"2017-11-14T21:59:34+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/python","editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1510694832029_1009082041","id":"20171020-101446_892258643","dateCreated":"2017-11-14T21:27:12+0000","dateStarted":"2017-11-15T00:56:58+0000","dateFinished":"2017-11-15T03:52:42+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:205"},{"text":"%pyspark\n\n# Save the models\nldaModel.save('s3://billsdata.net/CommonCrawl/topic_model_%d_files/ldamodel' % nfiles)\n#pipeline.save('s3://billsdata.net/CommonCrawl/topic_model_%d_files/textpipeline' % nfiles)","user":"anonymous","dateUpdated":"2017-11-14T21:59:34+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/python","editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1510694832030_1010236287","id":"20171020-124001_1609701105","dateCreated":"2017-11-14T21:27:12+0000","dateStarted":"2017-11-15T00:56:59+0000","dateFinished":"2017-11-15T03:52:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:206"},{"text":"%pyspark\n\n# Get topic vectors for index pages (estimate of topic vec per domain)\nvecs_index = vecs2.filter(\"url LIKE '%index.html'\")\nresults = ldaModel.transform(vecs_index)\n\n# Drop text cols\nresults2=results.drop('text').drop('words').drop('filtered')\n\n# Save domain topic vecs\nresults2.write.parquet('s3://billsdata.net/CommonCrawl/topic_model_%d_files/cc_index_page_topics' % nfiles)","user":"anonymous","dateUpdated":"2017-11-14T21:59:34+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/python","editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1510694832030_1010236287","id":"20171020-124102_343731757","dateCreated":"2017-11-14T21:27:12+0000","dateStarted":"2017-11-15T03:52:42+0000","dateFinished":"2017-11-15T03:57:43+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:207"},{"text":"%pyspark\n\n# Create a dataset containing just the host, url and top 3 topic labels & scores\nimport pandas as pd\nimport numpy as np\ntopicIndices = ldaModel.describeTopics(maxTermsPerTopic = 5).collect()\nvocab = model2.stages[2].vocabulary\n\ntopic_labels = []\nfor i, (topic, terms, termWeights) in enumerate(topicIndices):\n    topwords = pd.Series(dict(zip([vocab[t] for t in terms], termWeights))).sort_values(ascending=False)\n    topic_labels.append('_'.join(topwords.index.values))\n\ntopic_labels = np.array(topic_labels)\n\ndef topTopics(x):\n    labels = topic_labels[np.argsort(x.topicDistribution)[::-1][:3]]\n    scores = np.sort(x.topicDistribution)[::-1][:3]\n    return (x.domain, x.url, str(labels[0]), float(scores[0]), str(labels[1]), float(scores[1]), str(labels[2]), float(scores[2]))\n\nresults3 = results2.rdd.map(topTopics)\nresults3 = results3.toDF([\"host\", \"url\", \"topic1\", \"score1\", \"topic2\", \"score2\", \"topic3\", \"score3\"])\n\nresults3.write.parquet('s3://billsdata.net/CommonCrawl/topic_model_%d_files/cc_index_page_topic_labels' % nfiles)\nresults3.show()","user":"anonymous","dateUpdated":"2017-11-14T21:59:34+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/python","editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+--------------------+--------------------+-------------------+--------------------+-------------------+--------------------+--------------------+\n|                host|                 url|              topic1|             score1|              topic2|             score2|              topic3|              score3|\n+--------------------+--------------------+--------------------+-------------------+--------------------+-------------------+--------------------+--------------------+\n|    arabiansites.com|http://arabiansit...|horse_information...| 0.6396905290870044|wine_add_price_ba...|0.10596087726546025|city_north_new_un...|   0.098824192260912|\n|      boysgayxxx.com|http://boysgayxxx...|porn_sex_tube_big...| 0.8424738129603537|views_english_sig...| 0.1467125391979424|flights_flight_bo...|0.006444645467025647|\n|      boysgayxxx.com|http://boysgayxxx...|porn_sex_tube_big...| 0.8425357857114396|views_english_sig...|0.15308990913276074|one_said_would_li...|4.595047122914508E-5|\n|        cfbstats.com|http://cfbstats.c...|team_game_sports_...| 0.5951842364709187|news_sports_sched...|0.31869622436455636|view_app_android_...|  0.0697559800574197|\n|     dailysudoku.com|http://dailysudok...| jan_dec_mar_nov_oct| 0.4794823670339367|january_june_dece...|0.19206469156928957|wine_add_price_ba...|   0.158662563060513|\n|  distro.ibiblio.org|http://distro.ibi...|windows_software_...| 0.8649033424234936|views_english_sig...|0.08062825820189398|forum_forums_card...| 0.02837165292599697|\n|     docs.oracle.com|http://docs.oracl...|windows_software_...| 0.7325342015517485|domain_website_in...|0.10809582738112844|use_may_data_also...|  0.1025063079142338|\n|     docs.oracle.com|http://docs.oracl...|windows_software_...| 0.5651578243014255|use_may_data_also...| 0.3477201338517199|function_var_retu...| 0.03964603461800393|\n|     docs.oracle.com|http://docs.oracl...|windows_software_...| 0.6416624314414768|part_subject_fri_...|0.12524958855794607|php_line_home_pub...| 0.10548513774049663|\n|     docs.oracle.com|http://docs.oracl...|windows_software_...| 0.6915652899339862|php_line_home_pub...| 0.2010457834445715|yrs_java_data_new...|  0.0998448994781994|\n|     docs.oracle.com|http://docs.oracl...|use_may_data_also...| 0.6862663872051141|art_view_real_est...|0.19843380485624573|function_var_retu...| 0.09115700146596863|\n|     docs.oracle.com|http://docs.oracl...|windows_software_...|0.45644486626793335|php_line_home_pub...|0.35742446129928834|time_wait_medical...| 0.10758746930365749|\n|     edition.cnn.com|http://edition.cn...|news_new_world_ho...| 0.7149809372854299|one_said_would_li...| 0.2817020006778792|http_www_search_o...|3.471224580982894E-5|\n|        erotica7.com|http://erotica7.c...|porn_sex_tube_big...| 0.9502924452940715|art_view_real_est...|0.02999476543292517|reviews_review_de...|0.009495236930113867|\n|  faculty.ccbcmd.edu|http://faculty.cc...|use_may_data_also...|  0.500579543173033|research_data_mar...|  0.477676631573962|page_park_playlot...|0.016409625913312458|\n|galleries.payserv...|http://galleries....|porn_sex_tube_big...| 0.7090871936162488|movie_movies_tabl...|0.19017910017949446|property_rent_sal...|0.054745875913491705|\n|galleries.payserv...|http://galleries....|porn_sex_tube_big...|0.34954953001680167|movie_movies_tabl...|0.31627443005932904|information_use_m...| 0.14491636292238247|\n|galleries.payserv...|http://galleries....|porn_sex_tube_big...| 0.3417425302722237|movie_movies_tabl...|0.32740176909693625|information_use_m...|  0.1448591905117509|\n|galleries.payserv...|http://galleries....|porn_sex_tube_big...|0.42149168768730266|chapter_new_home_...|0.21244247646661507|movie_movies_tabl...| 0.20633514198222916|\n|galleries.payserv...|http://galleries....|movie_movies_tabl...| 0.4508158386376074|porn_sex_tube_big...| 0.4197805557201548|windows_software_...| 0.08917083571960636|\n+--------------------+--------------------+--------------------+-------------------+--------------------+-------------------+--------------------+--------------------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1510694832030_1010236287","id":"20171020-131815_2006247238","dateCreated":"2017-11-14T21:27:12+0000","dateStarted":"2017-11-15T03:52:47+0000","dateFinished":"2017-11-15T04:02:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:208"},{"text":"%pyspark\n\n","user":"anonymous","dateUpdated":"2017-11-14T21:59:34+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/python","editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1510694832031_1009851538","id":"20171020-101912_1610139389","dateCreated":"2017-11-14T21:27:12+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:209"}],"name":"Tom 1 Topic Modelling","id":"2CYF5NUF7","angularObjects":{"2BRWU4WXC:shared_process":[],"2AM1YV5CU:shared_process":[],"2AJXGMUUJ:shared_process":[],"2ANGGHHMQ:shared_process":[],"2AKK3QQXU:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}