{"paragraphs":[{"text":"%pyspark\n\n# PySpark CommonCrawl Topic Modelling\n# Tom V / Paul J - 8/11/2017\n\n# SET THE spark.driver.maxResultSize PROPERTY TO 3G\n\nimport boto\nfrom boto.s3.key import Key\nfrom gzipstream import GzipStreamFile\nfrom pyspark.sql.types import *\nimport warc\nimport ujson as json\nfrom urlparse import urlparse\nfrom langdetect import detect_langs\nimport pycld2 as cld2\n\nwetlist = sc.textFile(\"s3://commoncrawl/crawl-data/CC-MAIN-2017-04/wet.paths.gz\")\nwetlist.cache()\n\ndef unpack(uri):\n    conn = boto.connect_s3(anon=True, host='s3.amazonaws.com')\n    bucket = conn.get_bucket('commoncrawl')\n    key_ = Key(bucket, uri)\n    file_ = warc.WARCFile(fileobj=GzipStreamFile(key_))\n    return file_\n\ndef detect(x):\n    try:\n        return detect_langs(x)[0].lang # Maybe we can get away with looking at less characters, or do something less expensive?\n    except Exception as e:\n        return None\n        \ndef detect2(x):\n    try:\n        isReliable, textBytesFound, details = cld2.detect(x)\n        return details[0][1]\n    except Exception as e:\n        print(e)\n        return None\n\ndef process_wet(id_, iterator):\n    for uri in iterator:\n        file = unpack(uri)\n        for record in file: # Approx 53k web pages per WET file\n            try:\n                #url = record.rec_headers.get_header('WARC-Target-URI')\n                #yield record, record.content_stream().read().decode('utf-8')\n                url = record.url\n                domain = None if not url else urlparse(url).netloc\n                text = record.payload.read().decode('utf-8') #.limit(100) # TODO: Limit this read to ensure max length (for improving parallizability)\n                lang = detect2(text[:300]) # TODO: Language detection is what appears to be killing performance!\n                yield domain, url, text, lang\n            except Exception as e:\n                yield e\n                \ndef process_wet_simple(id_, iterator):\n    count=0\n    for uri in iterator:\n        file = unpack(uri)\n        for record in file:\n            try:\n                count=count+1\n                # TODO: Output total size of pages, rather than number of pages\n                # Histogram.\n            except Exception as e:\n                pass\n        #print(count)\n        yield count","dateUpdated":"2017-11-09T11:32:34+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1510227154731_427850698","id":"20171020-102243_1718178582","dateCreated":"2017-11-09T11:32:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1434"},{"text":"%pyspark\ndetect2(\"this is a test\")","dateUpdated":"2017-11-09T11:32:34+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"'en'\n"}]},"apps":[],"jobName":"paragraph_1510227154734_426696451","id":"20171027-134322_549744379","dateCreated":"2017-11-09T11:32:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1435"},{"text":"%pyspark\n\n# PARAMETER - number of input files\nnfiles = 2048\n\n# PARAMETER - slices / partitions of input\nfiles = sc.parallelize(wetlist.take(nfiles), numSlices=nfiles)\n\n# TODO: Make this use more than one CPU!\nprint(files.getNumPartitions())\n#files.mapPartitionsWithIndex(process_wet_simple).collect()\nrdd=files.mapPartitionsWithIndex(process_wet)\n\nprint(str(rdd))\ndocs = rdd.toDF([\"domain\", \"url\", \"text\",\"lang\"]) #  \"lang\"\n#docs.cache()\ndocs.count()","dateUpdated":"2017-11-09T11:32:34+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"2048\nPythonRDD[71] at RDD at PythonRDD.scala:48\n109857736\n"}]},"apps":[],"jobName":"paragraph_1510227154734_426696451","id":"20171020-101220_2022546189","dateCreated":"2017-11-09T11:32:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1436"},{"text":"%pyspark\n\ndocs_en = docs.filter(docs.lang == 'en')\n#docs_en = docs\n\n# PARAMETER - possibly set partitions?\n#docs_en = docs_en.repartition(nfiles)\n#docs_en.rdd.getNumPartitions()\n#docs_en.sample(True,0.01).groupBy('lang').count().toPandas()\ndocs_en.count()","dateUpdated":"2017-11-09T11:32:34+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"43818581\n"}]},"apps":[],"jobName":"paragraph_1510227154735_426311702","id":"20171020-110218_1507019685","dateCreated":"2017-11-09T11:32:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1437"},{"text":"%pyspark\n\nstopwords_english = ['i', 'me', 'my', 'myself', 'we', 'our', 'ours', 'ourselves', 'you', 'your', 'yours', 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she', 'her', 'hers', 'herself', 'it', 'its', 'itself', 'they', 'them', 'their', 'theirs', 'themselves', 'what', 'which', 'who', 'whom', 'this', 'that', 'these', 'those', 'am', 'is', 'are', 'was', 'were', 'be', 'been', 'being', 'have', 'has', 'had', 'having', 'do', 'does', 'did', 'doing', 'a', 'an', 'the', 'and', 'but', 'if', 'or', 'because', 'as', 'until', 'while', 'of', 'at', 'by', 'for', 'with', 'about', 'against', 'between', 'into', 'through', 'during', 'before', 'after', 'above', 'below', 'to', 'from', 'up', 'down', 'in', 'out', 'on', 'off', 'over', 'under', 'again', 'further', 'then', 'once', 'here', 'there', 'when', 'where', 'why', 'how', 'all', 'any', 'both', 'each', 'few', 'more', 'most', 'other', 'some', 'such', 'no', 'nor', 'not', 'only', 'own', 'same', 'so', 'than', 'too', 'very', 's', 't', 'can', 'will', 'just', 'don', 'should', 'now', 'd', 'll', 'm', 'o', 're', 've', 'y', 'ain', 'aren', 'couldn', 'didn', 'doesn', 'hadn', 'hasn', 'haven', 'isn', 'ma', 'mightn', 'mustn', 'needn', 'shan', 'shouldn', 'wasn', 'weren', 'won', 'wouldn', 'com', 'nbsp']\n\nfrom pyspark.ml import Pipeline\nfrom pyspark.ml.feature import RegexTokenizer, CountVectorizer, StopWordsRemover\n\n# PARAMETER - regex tokenization\ntokenizer = RegexTokenizer(inputCol=\"text\", outputCol=\"words\", pattern=\"\\\\p{L}{3,}\", gaps=False)\nstopwordRemover = StopWordsRemover(inputCol=\"words\", outputCol=\"filtered\",stopWords=stopwords_english, caseSensitive=False)\n\n# PARAMETER - vocab size, min and max doc frequency\ncv = CountVectorizer(inputCol=\"filtered\", outputCol=\"vec\",vocabSize=50000, minDF=50) # reduced vocabSize from 100k to 20k to save memory\n\n# TODO: Investigate why this hangs with 256 files\npipeline = Pipeline(stages=[tokenizer, stopwordRemover, cv])\nmodel = pipeline.fit(docs_en)\nvecs = model.transform(docs_en).drop('text').drop('words').drop('filtered')\nvecs.cache()\nvecs.count()\n\n# Took 42 min 51 sec on m4.16xlarge with 1024 files","dateUpdated":"2017-11-09T11:32:34+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"43818581\n"}]},"apps":[],"jobName":"paragraph_1510227154736_436699922","id":"20171020-101427_882065123","dateCreated":"2017-11-09T11:32:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1438"},{"text":"%pyspark\nsc.getConf().get('spark.driver.maxResultSize')","dateUpdated":"2017-11-09T11:32:34+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"u'16g'\n"}]},"apps":[],"jobName":"paragraph_1510227154736_436699922","id":"20171027-153123_778277811","dateCreated":"2017-11-09T11:32:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1439"},{"text":"%pyspark\nmodel.save('s3://billsdata.net/CommonCrawl/topic_model_%d_files/textmodel' % nfiles)\nvecs.write.parquet('s3://billsdata.net/CommonCrawl/topic_model_%d_files/cc_english_page_tf_vectors' % nfiles)","dateUpdated":"2017-11-09T11:32:34+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1510227154737_436315173","id":"20171027-145239_579746754","dateCreated":"2017-11-09T11:32:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1440"},{"title":"Skip to here to restart from saved vectors","text":"%pyspark\nfrom pyspark.ml.pipeline import PipelineModel\n\nnfiles = 2048\n\nmodel2 = PipelineModel.load('s3://billsdata.net/CommonCrawl/topic_model_%d_files/textmodel' % nfiles)\nvecs2 = spark.read.parquet('s3://billsdata.net/CommonCrawl/topic_model_%d_files/cc_english_page_tf_vectors' % nfiles)\n\nvecs2.show(10)","user":"anonymous","dateUpdated":"2017-11-09T11:33:17+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/python","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+--------------------+----+--------------------+\n|              domain|                 url|lang|                 vec|\n+--------------------+--------------------+----+--------------------+\n|                null|                null|  en|(50000,[60,79,92,...|\n|1.cricwaves-hrd.a...|http://1.cricwave...|  en|(50000,[0,1,2,3,5...|\n|       1015store.com|http://1015store....|  en|(50000,[0,6,7,23,...|\n|101bestandroidapp...|http://101bestand...|  en|(50000,[0,2,4,5,6...|\n|101bestandroidapp...|http://101bestand...|  en|(50000,[0,2,4,5,7...|\n|1027jackfm.iheart...|http://1027jackfm...|  en|(50000,[0,4,5,6,9...|\n|     1057thehawk.com|http://1057thehaw...|  en|(50000,[0,1,2,3,5...|\n|     1063thebuzz.com|http://1063thebuz...|  en|(50000,[0,2,3,5,6...|\n|     1063thebuzz.com|http://1063thebuz...|  en|(50000,[0,2,3,5,6...|\n|  1190kex.iheart.com|http://1190kex.ih...|  en|(50000,[0,4,5,6,7...|\n+--------------------+--------------------+----+--------------------+\nonly showing top 10 rows\n\n"}]},"apps":[],"jobName":"paragraph_1510227154737_436315173","id":"20171027-152148_622560673","dateCreated":"2017-11-09T11:32:34+0000","dateStarted":"2017-11-09T11:33:17+0000","dateFinished":"2017-11-09T11:34:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1441"},{"text":"%pyspark\nvecs2.cache()","user":"anonymous","dateUpdated":"2017-11-09T11:33:24+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"DataFrame[domain: string, url: string, lang: string, vec: vector]\n"}]},"apps":[],"jobName":"paragraph_1510227154738_437469420","id":"20171027-152858_769393097","dateCreated":"2017-11-09T11:32:34+0000","dateStarted":"2017-11-09T11:33:24+0000","dateFinished":"2017-11-09T11:34:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1442"},{"text":"%pyspark\n\n# Run the topic modelling\n\nfrom pyspark.ml.clustering import LDA\n#inputCol=\"vec\", outputCol=\"ldaVec\", k=3, optimizer=\"online\"\n\n# Fix java memory errors, perhaps using:\n# spark.driver.memory 256g - DIDN'T WORK\n# or by reducing vocabSize from 100k to 20k - WORKS!\n\n#With 128:\n#    Py4JJavaError: An error occurred while calling o375.fit.\n#: org.apache.spark.SparkException: Job 49 cancelled because SparkContext was shut down\n\nlda = LDA(k=100, maxIter=10, featuresCol=\"vec\") # Reduced maxIter from 100 to 50\nldaModel = lda.fit(vecs2)","user":"anonymous","dateUpdated":"2017-11-09T11:33:29+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1510227154738_437469420","id":"20171020-101446_892258643","dateCreated":"2017-11-09T11:32:34+0000","dateStarted":"2017-11-09T11:34:06+0000","dateFinished":"2017-11-09T13:51:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1443"},{"text":"%pyspark\n\n# Save the models\nldaModel.save('s3://billsdata.net/CommonCrawl/topic_model_%d_files/ldamodel' % nfiles)\n#pipeline.save('s3://billsdata.net/CommonCrawl/topic_model_%d_files/textpipeline' % nfiles)","user":"anonymous","dateUpdated":"2017-11-09T11:33:34+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1510227154739_437084671","id":"20171020-124001_1609701105","dateCreated":"2017-11-09T11:32:34+0000","dateStarted":"2017-11-09T11:34:07+0000","dateFinished":"2017-11-09T13:51:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1444"},{"text":"%pyspark\n\n# Get topic vectors for index pages (estimate of topic vec per domain)\nvecs_index = vecs2.filter(\"url LIKE '%index.html'\")\nresults = ldaModel.transform(vecs_index)\n\n# Drop text cols\nresults2=results.drop('text').drop('words').drop('filtered')\n\n# Save domain topic vecs\nresults2.write.parquet('s3://billsdata.net/CommonCrawl/topic_model_%d_files/cc_index_page_topics' % nfiles)","user":"anonymous","dateUpdated":"2017-11-09T15:25:12+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1510227154739_437084671","id":"20171020-124102_343731757","dateCreated":"2017-11-09T11:32:34+0000","dateStarted":"2017-11-09T15:25:12+0000","dateFinished":"2017-11-09T15:26:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1445"},{"text":"%pyspark\n\n# Create a dataset containing just the host, url and top 3 topic labels & scores\nimport pandas as pd\nimport numpy as np\ntopicIndices = ldaModel.describeTopics(maxTermsPerTopic = 5).collect()\nvocab = model2.stages[2].vocabulary\n\ntopic_labels = []\nfor i, (topic, terms, termWeights) in enumerate(topicIndices):\n    topwords = pd.Series(dict(zip([vocab[t] for t in terms], termWeights))).sort_values(ascending=False)\n    topic_labels.append('_'.join(topwords.index.values))\n\ntopic_labels = np.array(topic_labels)\n\ndef topTopics(x):\n    labels = topic_labels[np.argsort(x.topicDistribution)[::-1][:3]]\n    scores = np.sort(x.topicDistribution)[::-1][:3]\n    return (x.domain, x.url, str(labels[0]), float(scores[0]), str(labels[1]), float(scores[1]), str(labels[2]), float(scores[2]))\n\nresults3 = results2.rdd.map(topTopics)\nresults3 = results3.toDF([\"host\", \"url\", \"topic1\", \"score1\", \"topic2\", \"score2\", \"topic3\", \"score3\"])\n\nresults3.write.parquet('s3://billsdata.net/CommonCrawl/topic_model_%d_files/cc_index_page_topic_labels' % nfiles)\nresults3.show()","user":"anonymous","dateUpdated":"2017-11-09T15:26:45+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+--------------------+--------------------+-------------------+--------------------+--------------------+--------------------+--------------------+\n|                host|                 url|              topic1|             score1|              topic2|              score2|              topic3|              score3|\n+--------------------+--------------------+--------------------+-------------------+--------------------+--------------------+--------------------+--------------------+\n|    arabiansites.com|http://arabiansit...|dell_poweredge_ne...| 0.2821541632452619|hotels_hotel_reso...| 0.25533752747683996|new_john_lhblk_st...| 0.09580504989083381|\n|      boysgayxxx.com|http://boysgayxxx...|porn_sex_tube_vid...| 0.9567347637439242|parts_products_eq...|0.016390526468860557|wedding_info_indi...|0.010610240303419564|\n|      boysgayxxx.com|http://boysgayxxx...|porn_sex_tube_vid...| 0.9706813926413853|wedding_info_indi...|0.012924001701882118|width_font_color_...|0.012084585285042889|\n|        cfbstats.com|http://cfbstats.c...|sports_news_baske...| 0.7573308264452827|news_new_sports_g...|  0.2266831374043146|page_wiki_add_com...|1.661645362495028...|\n|     dailysudoku.com|http://dailysudok...| jan_dec_nov_oct_mar| 0.5286669139625906|january_december_...|  0.2774674758221686|table_winchester_...|    0.13024862559943|\n|  distro.ibiblio.org|http://distro.ibi...|files_linux_photo...| 0.4315107404072598|com_game_games_se...|   0.357957394517319|buy_dictionary_mu...| 0.09397649357302677|\n|     docs.oracle.com|http://docs.oracl...|com_game_games_se...| 0.9515979042155436|cell_protein_sex_...|0.040536664823916074|page_wiki_add_com...|8.173897798937817E-5|\n|     docs.oracle.com|http://docs.oracl...|com_game_games_se...| 0.4516646371377985|files_linux_photo...| 0.25387957054108384|name_see_usd_addr...|  0.2012484090648818|\n|     docs.oracle.com|http://docs.oracl...|software_business...| 0.3998687819782256|com_game_games_se...|  0.3382132715476115|org_java_share_an...| 0.14596288245068517|\n|     docs.oracle.com|http://docs.oracl...|org_java_share_an...| 0.4225673124785141|com_game_games_se...|  0.4043056226617915|php_line_html_hom...| 0.16558547169877244|\n|     docs.oracle.com|http://docs.oracl...|files_linux_photo...|0.26120823920742176|org_java_share_an...| 0.23573323236760568|university_resear...| 0.17780500693960824|\n|     docs.oracle.com|http://docs.oracl...|files_linux_photo...| 0.6179617378568576|php_line_html_hom...| 0.27214953672890696|sale_property_are...| 0.06792005396494907|\n|     edition.cnn.com|http://edition.cn...|news_article_new_...| 0.4920745082428689|would_one_reply_s...|  0.2202516495514862|university_illino...| 0.19562210557056248|\n|        erotica7.com|http://erotica7.c...|porn_sex_tube_vid...| 0.9386971726454953|art_school_high_l...|0.046044766336431744|name_see_usd_addr...|0.006496177393122242|\n|  faculty.ccbcmd.edu|http://faculty.cc...|cell_protein_sex_...| 0.6718796089209933|university_resear...| 0.17687593847916466|table_winchester_...| 0.08826688320668544|\n|galleries.payserv...|http://galleries....|porn_sex_tube_vid...| 0.7032781623282152|dvd_movie_video_w...| 0.19813785775367393|estate_home_real_...| 0.05260894524596545|\n|galleries.payserv...|http://galleries....|porn_sex_tube_vid...|0.29739350266042586|com_game_games_se...|  0.2581706403018661|dan_yang_pics_url...| 0.19631569399897578|\n|galleries.payserv...|http://galleries....|porn_sex_tube_vid...|   0.29117498759619|com_game_games_se...| 0.28654422502551263|dan_yang_pics_url...| 0.20983702064213317|\n|galleries.payserv...|http://galleries....|porn_sex_tube_vid...|0.39399383406672867|said_like_one_lov...| 0.34093655613401846|university_illino...| 0.12315111765676545|\n|galleries.payserv...|http://galleries....|porn_sex_tube_vid...| 0.5013460128495973|dvd_movie_video_w...| 0.33247382878569226|files_linux_photo...| 0.12594993188649192|\n+--------------------+--------------------+--------------------+-------------------+--------------------+--------------------+--------------------+--------------------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1510227154740_435160927","id":"20171020-131815_2006247238","dateCreated":"2017-11-09T11:32:34+0000","dateStarted":"2017-11-09T15:26:45+0000","dateFinished":"2017-11-09T15:28:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1446"},{"text":"%pyspark\n\n","dateUpdated":"2017-11-09T11:32:34+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1510227154740_435160927","id":"20171020-101912_1610139389","dateCreated":"2017-11-09T11:32:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1447"}],"name":"Tom 1 Topic Modelling","id":"2CZQS4YP9","angularObjects":{"2BRWU4WXC:shared_process":[],"2AM1YV5CU:shared_process":[],"2AJXGMUUJ:shared_process":[],"2ANGGHHMQ:shared_process":[],"2AKK3QQXU:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}