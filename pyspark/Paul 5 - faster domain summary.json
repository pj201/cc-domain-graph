{"paragraphs":[{"text":"%pyspark\n\n# Zeppelin notebook to create domain summaries based on the May/Jun/Jul 2017 CommonCrawl graph\n# as per description here: http://commoncrawl.org/2017/08/webgraph-2017-may-june-july/\n# PJ - 1 December 2017\n\nimport boto\nfrom pyspark.sql.types import *\n\n#LIMIT=10000000 # Temporary limit while developing code.\n\n# Import the PLD vertices list as a DataFrame\n#pld_schema=StructType([StructField(\"ID\", StringType(), False), StructField(\"PLD\", StringType(), False)])\n#pld_txt=sc.textFile(\"s3://commoncrawl/projects/hyperlinkgraph/cc-main-2017-may-jun-jul/domaingraph/vertices.txt.gz\")\n#pld_txt=sc.textFile(\"s3://commoncrawl/projects/hyperlinkgraph/cc-main-2017-aug-sep-oct/domaingraph/vertices.txt.gz\")\n#temp_pld = pld_txt.map(lambda k: k.split()) # By default, splits on whitespace, which is what we want\n#pld_df=temp_pld.toDF(pld_schema) #.limit(LIMIT) #.repartition(4)\n#pld_df.show(3)\n\n# Load in an uncompressed, partitioned format, for fast reading in the future\n#saveURI=\"s3://billsdata.net/CommonCrawl/hyperlinkgraph/cc-main-2017-may-jun-jul/domaingraph/vertices/\"\nsaveURI=\"s3://billsdata.net/CommonCrawl/hyperlinkgraph/cc-main-2017-aug-sep-oct/domaingraph/vertices/\"\n#pld_df.coalesce(64).write.save(saveURI) # Use all default options\npld_df=spark.read.load(saveURI)\npld_df.show(3)\npld_df.cache()\n#print(pld_df.count()) # Should have 91M domains, Aug-Sep-Oct now 93M domains","user":"anonymous","dateUpdated":"2017-12-01T08:58:03+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---+-----+\n| ID|  PLD|\n+---+-----+\n|  0|aaa.1|\n|  1|aaa.2|\n|  2|aaa.3|\n+---+-----+\nonly showing top 3 rows\n\nDataFrame[ID: string, PLD: string]\n"}]},"apps":[],"jobName":"paragraph_1512118601351_858517254","id":"20170929-081624_672091334","dateCreated":"2017-12-01T08:56:41+0000","dateStarted":"2017-12-01T08:58:03+0000","dateFinished":"2017-12-01T08:58:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:196"},{"text":"%pyspark\n\n# Next import the PLD edges as a DataFrame\n#pld_edges_schema=StructType([StructField(\"src\", LongType(), False), StructField(\"dst\", LongType(), False)])\n#pld_edges_txt=sc.textFile(\"s3://commoncrawl/projects/hyperlinkgraph/cc-main-2017-may-jun-jul/domaingraph/edges.txt.gz\")\n#pld_edges_txt=sc.textFile(\"s3://commoncrawl/projects/hyperlinkgraph/cc-main-2017-aug-sep-oct/domaingraph/edges.txt.gz\")\n#temp_edges_pld = pld_edges_txt.map(lambda k: map(int, k.split())) # By default, splits on whitespace, which is what we want\n#pld_edges_df=temp_edges_pld.toDF(pld_edges_schema) #.limit(LIMIT*10) #.repartition(8)\n#pld_edges_df.show(3)\n\n# Load in an uncompressed, partitioned format, for fast reading in the future\n#saveURI=\"s3://billsdata.net/CommonCrawl/hyperlinkgraph/cc-main-2017-may-jun-jul/domaingraph/edges/\"\nsaveURI=\"s3://billsdata.net/CommonCrawl/hyperlinkgraph/cc-main-2017-aug-sep-oct/domaingraph/edges/\"\n#pld_edges_df.coalesce(64).write.save(saveURI) # Use all default options\npld_edges_df=spark.read.load(saveURI)\npld_edges_df.show(3)\npld_edges_df.cache()","user":"anonymous","dateUpdated":"2017-12-01T08:58:54+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---+--------+\n|src|     dst|\n+---+--------+\n|  8| 9843173|\n| 27| 9843173|\n| 27|79323140|\n+---+--------+\nonly showing top 3 rows\n\nDataFrame[src: bigint, dst: bigint]\n"}]},"apps":[],"jobName":"paragraph_1512118601354_857363007","id":"20170929-095050_1324183281","dateCreated":"2017-12-01T08:56:41+0000","dateStarted":"2017-12-01T08:58:54+0000","dateFinished":"2017-12-01T08:58:58+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:197"},{"text":"%pyspark\n\n#import boto\n#from boto.s3.key import Key\n#from gzipstream import GzipStreamFile\n#from pyspark.sql.types import *\n#import warc\n\n# New host graph is in file-index format, so can be parallelized.\n#nodefiles = sc.textFile(\"s3://commoncrawl/projects/hyperlinkgraph/cc-main-2017-aug-sep-oct/hostgraph/vertices.paths.gz\") # 48 files (27.9GB)\n#nodefiles.cache()\n    \n#def unpack(uri):\n#    conn = boto.connect_s3(anon=True, host='s3.amazonaws.com')\n#    bucket = conn.get_bucket('commoncrawl')\n#    key_ = Key(bucket, uri)\n#    print(key_)\n#    file_ = GzipStreamFile(key_)\n#    return file_\n\n#def process_nodes(id_, iterator):\n#    for uri in iterator:\n#        file = unpack(uri)\n#        for record in file:\n#            try:\n#                (hostid, rev_host) = record.split()\n#                yield hostid, rev_host\n#            except Exception as e:\n#                yield e\n        \n#files = sc.parallelize(nodefiles.take(48), numSlices=48) # 48 total\n#print(files.getNumPartitions())\n#rdd=files.mapPartitionsWithIndex(process_nodes)\n\n#print(str(rdd))\n#rdd.take(3)\n#host_df = rdd.toDF([\"hostid\", \"host\"])\n#host_df.show(3)\n\n# NO! Load the host-level graph vertices in the same way\n#host_schema=StructType([StructField(\"hostid\", StringType(), False), StructField(\"host\", StringType(), False)])\n#host_txt=sc.textFile(\"s3://commoncrawl/projects/hyperlinkgraph/cc-main-2017-may-jun-jul/hostgraph/vertices.txt.gz\")\n#host_txt=sc.textFile(\"s3://commoncrawl/projects/hyperlinkgraph/cc-main-2017-aug-sep-oct/hostgraph/vertices.txt.gz\")\n#temp_host = host_txt.map(lambda k: k.split()) # By default, splits on whitespace, which is what we want\n#host_df=temp_host.toDF(host_schema) #.repartition(4)\n#host_df.show(3)\n\n# Save in an uncompressed, partitioned format, for fast reading in the future\n#saveURI=\"s3://billsdata.net/CommonCrawl/hyperlinkgraph/cc-main-2017-may-jun-jul/hostgraph/vertices/\"\nsaveURI=\"s3://billsdata.net/CommonCrawl/hyperlinkgraph/cc-main-2017-aug-sep-oct/hostgraph/vertices/\"\n#host_df.coalesce(64).write.save(saveURI) # Use all default options\nhost_df=spark.read.load(saveURI)\nhost_df.show(3)\nhost_df.cache()\n#print(host_df.count()) # Should have 1.3B hosts, or 5.6B!","user":"anonymous","dateUpdated":"2017-12-01T08:59:03+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+------+-----+\n|hostid| host|\n+------+-----+\n|     0|aaa.1|\n|     1|aaa.2|\n|     2|aaa.3|\n+------+-----+\nonly showing top 3 rows\n\nDataFrame[hostid: string, host: string]\n"}]},"apps":[],"jobName":"paragraph_1512118601355_856978258","id":"20170929-095310_1201506389","dateCreated":"2017-12-01T08:56:41+0000","dateStarted":"2017-12-01T08:59:03+0000","dateFinished":"2017-12-01T08:59:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:198"},{"text":"%pyspark\n\nimport boto\nfrom pyspark.sql.types import *\n\n# Load in all harmonic centrality and page-ranks, and join based on reverse domain name\n# Format: #hc_pos #hc_val #pr_pos #pr_val #host_rev\n#pr_schema=StructType([StructField(\"hc_pos\", StringType(), False), StructField(\"hc_val\", StringType(), False), StructField(\"pr_pos\", StringType(), False), StructField(\"pr_val\", StringType(), False), StructField(\"host_rev\", StringType(), False)])\n#pr_txt=sc.textFile(\"s3://commoncrawl/projects/hyperlinkgraph/cc-main-2017-may-jun-jul/domaingraph/ranks.txt.gz\")\n#pr_txt=sc.textFile(\"s3://commoncrawl/projects/hyperlinkgraph/cc-main-2017-aug-sep-oct/domaingraph/ranks.txt.gz\")\n#header=pr_txt.first()\n#pr_txt=pr_txt.filter(lambda x: x!=header)\n#temp_pr = pr_txt.map(lambda k: k.split()) # By default, splits on whitespace, which is what we want\n#pr_df=temp_pr.toDF(header.split()).withColumnRenamed(\"#host_rev\",\"host_rev\") #.limit(LIMIT*10) #.repartition(8)\n#pr_df.show(3)\n\n# Save in an uncompressed, partitioned format, for fast reading in the future\n#saveURI=\"s3://billsdata.net/CommonCrawl/hyperlinkgraph/cc-main-2017-may-jun-jul/domaingraph/ranks/\"\nsaveURI=\"s3://billsdata.net/CommonCrawl/hyperlinkgraph/cc-main-2017-aug-sep-oct/domaingraph/ranks/\"\n#pr_df.coalesce(64).write.save(saveURI) # Use all default options\npr_df=spark.read.load(saveURI)\npr_df.show(3)\npr_df.cache()\n#pr_df.count() # Should be 91M/93M","user":"anonymous","dateUpdated":"2017-12-01T08:59:13+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------+-----------+-------+--------------------+------------+\n|#hc_pos|    #hc_val|#pr_pos|             #pr_val|    host_rev|\n+-------+-----------+-------+--------------------+------------+\n|      1|2.4624394E7|      1| 0.01616200977123703|com.facebook|\n|      2|2.2489142E7|      3|0.009681990632289922|  com.google|\n|      3|2.2230666E7|      4|0.009430538325706608| com.twitter|\n+-------+-----------+-------+--------------------+------------+\nonly showing top 3 rows\n\nDataFrame[#hc_pos: string, #hc_val: string, #pr_pos: string, #pr_val: string, host_rev: string]\n"}]},"apps":[],"jobName":"paragraph_1512118601355_856978258","id":"20170929-093202_1772383833","dateCreated":"2017-12-01T08:56:41+0000","dateStarted":"2017-12-01T08:59:13+0000","dateFinished":"2017-12-01T08:59:17+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:199"},{"text":"%pyspark\n\n# Debug partitioning of our 4 big dataframes\nsc.getConf().getAll() #.mkString(\"\\n\")\nprint(pld_df.rdd.getNumPartitions())\nprint(pld_edges_df.rdd.getNumPartitions())\nprint(host_df.rdd.getNumPartitions())\npr_df.rdd.getNumPartitions()","user":"anonymous","dateUpdated":"2017-12-01T08:59:24+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"293\n512\n520\n512\n"}]},"apps":[],"jobName":"paragraph_1512118601355_856978258","id":"20171006-161509_1868852031","dateCreated":"2017-12-01T08:56:41+0000","dateStarted":"2017-12-01T08:59:24+0000","dateFinished":"2017-12-01T08:59:24+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:200"},{"text":"%pyspark #--packages graphframes:graphframes:0.5.0-spark2.1-s_2.11\n\n# We now have everything we need in these four dataframes to create the summaries we need.\n\n# This code can't handle the complete edge lists, and produces this exception:\n# java.lang.IllegalArgumentException: Size exceeds Integer.MAX_VALUE\n#out_degrees_=dict(pld_edges_df.groupBy(\"src\").count().collect())\n#in_degrees=dict(pld_edges_df.groupBy(\"dst\").count().collect())\n#print(out_degrees['846558'])\n#print(in_degrees['846558'])\n\n# Instead, just create RDDs and use lookup()\nout_degrees=pld_edges_df.groupBy(\"src\").count()\nin_degrees=pld_edges_df.groupBy(\"dst\").count()\npld_edges_df.unpersist()\nout_degrees.show(3)\nin_degrees.show(3)\n#print(out_degrees.rdd.lookup(846558))\n#print(in_degrees.rdd.lookup(846558))","user":"anonymous","dateUpdated":"2017-12-01T08:59:36+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------+-----+\n|     src|count|\n+--------+-----+\n|47758452|    1|\n|47759465|    1|\n|47759855|   28|\n+--------+-----+\nonly showing top 3 rows\n\n+--------+-----+\n|     dst|count|\n+--------+-----+\n|81145067|   69|\n|81471236| 1985|\n|81534636|    1|\n+--------+-----+\nonly showing top 3 rows\n\n"}]},"apps":[],"jobName":"paragraph_1512118601355_856978258","id":"20170929-095727_1596943627","dateCreated":"2017-12-01T08:56:41+0000","dateStarted":"2017-12-01T08:59:36+0000","dateFinished":"2017-12-01T09:00:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:201"},{"text":"%pyspark\n\n# Next, we'll construct a local dictionary from of all the PLDS (key is the PLD, value is the ID)\n# This is our truth-table of known PLDs that we'll use when counting hosts\n# This code can't handle the full PLD list and produces this exception:\n# Stack trace: ExitCodeException exitCode=52\n#pld_lookup_table=dict(pld_df.rdd.map(lambda x: (x['PLD'], x['ID'])).collect()) # Bad!\n#print(pld_lookup_table[\"aaa.aaa\"])\n\n# Instead, just create an RDD and use lookup()\n#pld_lookup_table=pld_df.rdd.map(lambda x: (x['PLD'], x['ID']))\n#print(pld_lookup_table.lookup(\"aaa.aaa\")) # Very bad!\n\n# Or let's try creating as a BloomFilter, since we only want to record presence of a PLD\n#pld_bf = pld_df.stat.bloomFilter(\"PLD\", expectedNumItems, fpp) # Doesn't exist in pyspark API!\n#pld_bf.mightContain(\"aaa.aaa\")\n\n# Create a bloom filter using a pure python package (might be a little slow)\nfrom pybloom import BloomFilter\npld_bf = BloomFilter(capacity=94000000, error_rate=0.005)\n\nfor row in pld_df.rdd.collect(): # limit(10000000) # TODO: Still bad (and exceeds spark.driver.maxResultSize with all rows)!\n    pld_bf.add(row['PLD'])\n\nprint(pld_df.rdd.take(3))\nprint(pld_df.rdd.take(3)[2]['PLD'])\n#pld_bf.add(pld_df.rdd.take(3)[2]['PLD'])\nprint(\"aaa.aaa\" in pld_bf) # Should be True\n\n# TODO: Fix this distributed BloomFilter implementation - can't figure out how to properly combine BFs in a reduce operation!\n#tmp=pld_df.rdd.map(lambda x: pld_bf.add(x['PLD'])) # Very bad - pld_bf gets copied to each of the workers then discarded!\n#tmp=pld_df.rdd.map(lambda x: (pld_bf.add(x['PLD']), pld_bf)).reduce(lambda x,y: x[1].union(y[1])) # Should work but complains that BloomFilter isn't iterable!\n#print(tmp.take(3))\n#print(tmp.count()) # Ensure it runs the map across the entire dataframe\n\nimport sys\nprint(sys.getsizeof(pld_bf))\nprint(len(pld_bf)) # Should match number of items entered\n\n# Broadcast the bloom filter so it's available on all the slave nodes - we don't need to change\n# it any more so it's fine being immutable.\npld_bf_distrib=sc.broadcast(pld_bf)\n\nprint(\"aaa.aaa\" in pld_bf) # Should be true\nprint(\"aaa.aaa.bla\" in pld_bf) # Should be false\nprint(\"aaa.aaa\" in pld_bf_distrib.value) # Should be true\nprint(\"aaa.aaa.bla\" in pld_bf_distrib.value) # Should be false","user":"anonymous","dateUpdated":"2017-12-01T09:28:19+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[Row(ID=u'0', PLD=u'aaa.1'), Row(ID=u'1', PLD=u'aaa.2'), Row(ID=u'2', PLD=u'aaa.3')]\naaa.3\nTrue\n64\n93110180\nTrue\nFalse\nTrue\nFalse\n"}]},"apps":[],"jobName":"paragraph_1512118601355_856978258","id":"20170929-100048_2070118110","dateCreated":"2017-12-01T08:56:41+0000","dateStarted":"2017-12-01T09:28:19+0000","dateFinished":"2017-12-01T09:54:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:202"},{"text":"%pyspark\n\n# Returns a Boolean to say whether PLD is a hostname in itself\ndef is_a_pld(hostname):\n    #if hostname in pld_lookup_table:\n    #if pld_lookup_table.filter(lambda a: a == hostname).count()>0:\n    if hostname in pld_bf_distrib.value:\n        return True\n    else:\n        return False\n        \n# Define a function to do the hostname->pld conversion, if the pld exists in our dictionary \ndef convert_hostname(hostname):\n    # Return hostname as-is, if this is already a PLD\n    #if hostname in pld_lookup_table:\n    #if pld_lookup_table.filter(lambda a: a == hostname).count()>0:\n    if hostname in pld_bf_distrib.value:\n        return hostname\n    # Otherwise we're going to have to split it up and test the parts\n    try:\n        parts=hostname.split('.')\n        if (len(parts)>4 and is_a_pld('.'.join(parts[0:4]))):\n            return '.'.join(parts[0:4])\n        if (len(parts)>3 and is_a_pld('.'.join(parts[0:3]))):\n            return '.'.join(parts[0:3])\n        if (len(parts)>2 and is_a_pld('.'.join(parts[0:2]))):\n            return '.'.join(parts[0:2])\n        if (len(parts)>1 and is_a_pld('.'.join(parts[0:1]))):\n            return '.'.join(parts[0:1])\n        return \"ERROR\" # Couldn't find a corresponding PLD - this should never happen!\n    except:\n        return \"ERROR\"\n        \n# Test\nprint(convert_hostname(\"aaa.aaa\"))\nprint(is_a_pld(\"aaa.aaa\")) # Should be true","user":"anonymous","dateUpdated":"2017-12-01T09:55:13+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"aaa.aaa\nTrue\n"}]},"apps":[],"jobName":"paragraph_1512118601356_855054514","id":"20171004-091447_4214261","dateCreated":"2017-12-01T08:56:41+0000","dateStarted":"2017-12-01T09:55:13+0000","dateFinished":"2017-12-01T09:55:13+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:203"},{"text":"%pyspark\n\n# Now count the number of hosts per PLD in a scalable way, and create another dictionary\n# Still takes over an hour since host_df contains 1.3B rows but should complete without errors.\n# (An attempt to collectAsMap at the end results in java Integer.MAX_VALUE or memory errors!)\ncount_rdd=host_df.drop('hostid').rdd.map(lambda x: (convert_hostname(x['host']),1)).reduceByKey(lambda x,y: x+y) #.collectAsMap() # Consider using a CountMin sketch here in future?\nbool_rdd=host_df.drop('hostid').rdd.map(lambda x: (x['host'], is_a_pld(x['host']))).filter(lambda x: x[1]==True) #.collectAsMap() # Only outputs PLD hosts (so <91M rows)\n\nprint(count_rdd.take(3))\nprint(bool_rdd.take(3))\nprint(count_rdd.count())\nprint(bool_rdd.count())\n\nhost_df.unpersist()\n\n# Debugging\nprint(count_rdd.filter(lambda x: x[0]=='aaa.aaa').collect())\nprint(len(count_rdd.filter(lambda x: x[0]=='ERROR').collect())) # Should be zero once we've loaded all the PLDs!","user":"anonymous","dateUpdated":"2017-12-01T09:55:32+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[(u'be.bowlingbrussels', 1), (u'br.com.xixdemarco', 1), (u'cz.slashdot', 1)]\n[(u'aaa.1', True), (u'aaa.2', True), (u'aaa.3', True)]\n93458500\n91458329\n[(u'aaa.aaa', 6)]\n1\n"}]},"apps":[],"jobName":"paragraph_1512118601356_855054514","id":"20171004-092350_1522843259","dateCreated":"2017-12-01T08:56:41+0000","dateStarted":"2017-12-01T09:55:32+0000","dateFinished":"2017-12-01T10:31:15+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:204"},{"text":"%pyspark\n\nfrom pyspark.sql.functions import col, when, lit\n\n# The following code works well when the data is small enough to collect into a python dictionary but our data is too big:\n# Define a UDF to perform column-based lookup\n#def translate(mapping):\n#    def translate_(col):\n#        if not mapping.get(col):\n#            return 0\n#        else:\n#            return mapping.get(col)\n#    return udf(translate_, IntegerType())\n# And a similar function for the Boolean map\n#def translate_bool(mapping):\n#    def translate_bool_(col):\n#        if not mapping.get(col):\n#            return False\n#        else:\n#            return mapping.get(col)\n#    return udf(translate_bool_, BooleanType())\n# Insert our count column back into the host summary dataframe, along with a boolean to say whether the PLD is a host in itself\n# While we're at it, let's add in the in and out-degrees too, and an indicator of whether the site has been crawled.\n#crawled_test=when(col(\"OutDegree\")==0, lit(False)).otherwise(lit(True))\n#pld_df_joined=pld_df.withColumn('NumHosts', translate(count_table)(\"PLD\"))\\\n                    #.withColumn('PLDisHost?', translate_bool(bool_table)(\"PLD\"))\n                    #.withColumn('InDegree', translate(in_degrees)(\"ID\"))\\\n                    #.withColumn('OutDegree', translate(out_degrees)(\"ID\"))\\\n                    #.withColumn('Crawled?', crawled_test)\n                    \n# Convert the result RDDs to dataframes, ready for joining\ncountschema=StructType([StructField(\"PLD2\", StringType(), False), StructField(\"numHosts\", LongType(), False)])\ncount_df=count_rdd.toDF(countschema)\ncount_df.show(3)\nboolschema=StructType([StructField(\"PLD2\", StringType(), False), StructField(\"PLDtest\", BooleanType(), False)])\nbool_df=bool_rdd.toDF(boolschema)\nbool_df.show(3)\n\n# Join these new dataframes with the original dataframe (using fast equi-joins)\npld_df2=pld_df.join(count_df, count_df.PLD2==pld_df.PLD, \"leftOuter\").drop(\"PLD2\")\nbool_test=when(col(\"PLDtest\").isNull(), lit(False)).otherwise(lit(True))\npld_df_joined=pld_df2.join(bool_df, bool_df.PLD2==pld_df2.PLD, \"leftOuter\").drop(\"PLD2\").withColumn('pldIsHostFlag', bool_test).drop(\"PLDtest\")\n\npld_df.unpersist()\npld_df_joined.sort(\"numHosts\", ascending=False).show(100)\npld_df_joined.cache()","user":"anonymous","dateUpdated":"2017-12-01T09:55:59+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------+--------+\n|          PLD2|numHosts|\n+--------------+--------+\n| club.yashecao|       1|\n|com.3h-galerie|       1|\n|   cz.slashdot|       1|\n+--------------+--------+\nonly showing top 3 rows\n\n+-----+-------+\n| PLD2|PLDtest|\n+-----+-------+\n|aaa.1|   true|\n|aaa.2|   true|\n|aaa.3|   true|\n+-----+-------+\nonly showing top 3 rows\n\n+--------+--------------------+--------+-------------+\n|      ID|                 PLD|numHosts|pldIsHostFlag|\n+--------+--------------------+--------+-------------+\n|18014867|             com.cjb|75378730|         true|\n| 7023192|           cn.blogus|59220356|         true|\n|33179176|          com.lrolaw|20509683|         true|\n|29603772|          com.jdudar|20509664|         true|\n|35657576|           com.mozvo|20509654|         true|\n|13397298|        com.azteccup|20509607|         true|\n|20744885|com.dioceseofsthe...|20508823|         true|\n|15394998| com.bootcampbeijing|20508781|         true|\n|41584080|   com.rightmatching|20507520|         true|\n|35523743|com.morgellonssup...|20507356|         true|\n|31270261|       com.kmcits420|20507350|         true|\n|45509311|  com.superiorjuegos|20507034|         true|\n|15921962|  com.buckminster076|20506719|         true|\n|13800248|com.barranquillas...|20506668|         true|\n|33954236|       com.marketuno|20506267|         true|\n|10268326|  com.adamkhoowealth|20506229|         true|\n|32768799|   com.livederby2007|20506047|         true|\n|44370386|      com.soleil1987|20506000|         true|\n|33105197|         com.love099|20505940|         true|\n|28908139|       com.interx-me|20505807|         true|\n|29408908| com.james-robertson|20505745|         true|\n|50464459|com.whomadeyoumir...|20505455|         true|\n|36486420|        com.nbreview|20505445|         true|\n|38888717|com.people-bookstore|20505409|         true|\n| 9233759|      com.4000351970|20505287|         true|\n|48560869|       com.ubicmedia|20504951|         true|\n|29809633|    com.jianli-muban|20504549|         true|\n|41355695|         com.resmesh|20315793|         true|\n|26802263|          com.hbrush|19982648|         true|\n|24896472|   com.game-stalkers|19897183|         true|\n|28975006|       com.ioweyouth|19760915|         true|\n|13937683|          com.bbddaa|17327420|         true|\n|52373432|          com.zzjxtz|16652847|         true|\n|52374852|          com.zzmmaa|13995992|         true|\n|18655298|     com.composesite|13724658|         true|\n| 9400314|           com.533b8|13721487|         true|\n|17121992|      com.cedarrunhc|13412701|         true|\n|44854531|          com.ssygjy|13398432|         true|\n|15064714|        com.blogspot|13106595|         true|\n|51915613|          com.yuce49|11300502|         true|\n|50835103|       com.wordpress| 9414108|         true|\n|49826379|       com.w3cdomain| 9081962|         true|\n|32459298|           com.liao1| 8103895|         true|\n| 6681447| club.diebestenfilme| 8020547|         true|\n|25291500|com.getrichandgiv...| 7945435|         true|\n|29959754|           com.jnhgy| 7716002|         true|\n|33203840|        com.ltuvitrc| 7520063|         true|\n|16003297|      com.bumpbabyme| 6987303|         true|\n|44054661|         com.skyrock| 6396662|         true|\n|70135629|        my.ipaddress| 6321882|         true|\n| 9421727|          com.56link| 6207898|         true|\n|48353731|          com.tumblr| 5675158|         true|\n|38185293|        com.ourssite| 5648707|         true|\n|80736912|   org.securityscans| 5431515|         true|\n|36382355|  com.natalyaserkova| 4851131|         true|\n|41532863|com.richardson-cl...| 4760042|         true|\n|51028482|          com.wwwbfh| 4606881|         true|\n|78035530|        org.chinapic| 4504215|         true|\n|78035617|         org.chinapy| 4333712|         true|\n|37388119|           com.nxein| 4007958|         true|\n| 7445509|         cn.googlejk| 3851985|         true|\n| 8211207|        co.caller-id| 3717466|         true|\n|17660854|  com.chinaappletree| 3702046|         true|\n|49057596|         com.valakya| 3553425|         true|\n|28612778|com.indochinatour...| 3534833|         true|\n|78035342|        org.chinamsg| 3445376|         true|\n| 6700177| club.myweddingdress| 3117233|         true|\n|18854369|      com.coolgigllc| 3076168|         true|\n|14164498|  com.beijingyourway| 3075092|         true|\n|17549305|      com.chenzopark| 3048893|         true|\n|78034364|         org.chinadn| 3008560|         true|\n|21192255|    com.dotnetmaniac| 2991963|         true|\n|24529068|    com.friendlyvote| 2970574|         true|\n|16206113|           com.byila| 2957410|         true|\n|74053375|         net.truguru| 2905463|         true|\n| 7530112|           cn.hiboor| 2893721|         true|\n| 7338927|         cn.dgcard86| 2890177|         true|\n| 7514407|cn.hangzhougrandt...| 2889134|         true|\n| 7063474|           cn.cityou| 2886429|         true|\n| 8732829|        com.177apple| 2885747|         true|\n| 7335071| cn.declan-galbraith| 2882655|         true|\n|52319577|          com.zts007| 2880273|         true|\n| 6845265|           cn.9ganxi| 2879207|         true|\n|44074491|       com.sleekbitz| 2878649|         true|\n| 7540567|        cn.hollerado| 2873203|         true|\n| 6785943|          cn.4124240| 2871003|         true|\n|71404788|         net.devlcsc| 2866197|         true|\n|49827541|         com.w3snoop| 2837947|         true|\n|50050086|         com.wcbrand| 2800407|         true|\n|44813586|       com.sre-music| 2762599|         true|\n|12249694|       com.apps-cafe| 2761396|         true|\n|45902573|      com.taiyingled| 2756403|         true|\n| 8116369|            cn.yhmmo| 2658741|         true|\n|40940628|          com.rc-seo| 2573137|         true|\n|13808285|com.barrosalgados...| 2562089|         true|\n| 9530239|         com.6thmega| 2557014|         true|\n| 7436824|    cn.geosynthetics| 2439624|         true|\n| 6699190|     club.moodforums| 2369974|         true|\n|34900248|      com.mikeaitken| 2323707|         true|\n|49102795|         com.vancarr| 2298825|         true|\n+--------+--------------------+--------+-------------+\nonly showing top 100 rows\n\nDataFrame[ID: string, PLD: string, numHosts: bigint, pldIsHostFlag: boolean]\n"}]},"apps":[],"jobName":"paragraph_1512118601356_855054514","id":"20171004-100819_284908525","dateCreated":"2017-12-01T08:56:41+0000","dateStarted":"2017-12-01T09:55:59+0000","dateFinished":"2017-12-01T10:46:55+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:205"},{"text":"%pyspark\n\n# Join with in-degree and out-degree dataframes\npld_df_joined2=pld_df_joined.join(out_degrees, out_degrees.src==pld_df_joined.ID, \"leftOuter\").drop(\"src\").withColumnRenamed(\"count\",\"pldLinksOut\")\npld_df_joined.unpersist()\npld_df_joined3=pld_df_joined2.join(in_degrees, in_degrees.dst==pld_df_joined2.ID, \"leftOuter\").drop(\"dst\").withColumnRenamed(\"count\",\"pldLinksIn\")\npld_df_joined2.unpersist()\npld_df_joined3.show(5)\npld_df_joined3.cache()","user":"anonymous","dateUpdated":"2017-12-01T09:56:03+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----+-----------+--------+-------------+-----------+----------+\n|  ID|        PLD|numHosts|pldIsHostFlag|pldLinksOut|pldLinksIn|\n+----+-----------+--------+-------------+-----------+----------+\n|  26|      aaa.n|       1|         true|       null|         1|\n|  29|      aaa.t|       1|         true|       null|         1|\n| 474|    ac.3920|      15|        false|          2|      null|\n| 964|    ac.atma|       3|         true|         55|        43|\n|1677|ac.forgotpw|       1|         true|       null|         1|\n+----+-----------+--------+-------------+-----------+----------+\nonly showing top 5 rows\n\nDataFrame[ID: string, PLD: string, numHosts: bigint, pldIsHostFlag: boolean, pldLinksOut: bigint, pldLinksIn: bigint]\n"}]},"apps":[],"jobName":"paragraph_1512118601356_855054514","id":"20171006-152234_1487383953","dateCreated":"2017-12-01T08:56:41+0000","dateStarted":"2017-12-01T10:31:15+0000","dateFinished":"2017-12-01T11:04:09+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:206"},{"text":"%pyspark\n\n# Insert a flag to indicate whether the PLD has been crawled\ncrawled_test=when(col(\"pldLinksOut\").isNull(), lit(False)).otherwise(lit(True))\npld_df_joined4=pld_df_joined3.withColumn('wasCrawledFlag', crawled_test)\npld_df_joined3.unpersist()\npld_df_joined4.show(5)\npld_df_joined4.cache()","user":"anonymous","dateUpdated":"2017-12-01T09:56:06+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----+-----------+--------+-------------+-----------+----------+--------------+\n|  ID|        PLD|numHosts|pldIsHostFlag|pldLinksOut|pldLinksIn|wasCrawledFlag|\n+----+-----------+--------+-------------+-----------+----------+--------------+\n|  26|      aaa.n|       1|         true|       null|         1|         false|\n|  29|      aaa.t|       1|         true|       null|         1|         false|\n| 474|    ac.3920|      15|        false|          2|      null|          true|\n| 964|    ac.atma|       3|         true|         55|        43|          true|\n|1677|ac.forgotpw|       1|         true|       null|         1|         false|\n+----+-----------+--------+-------------+-----------+----------+--------------+\nonly showing top 5 rows\n\nDataFrame[ID: string, PLD: string, numHosts: bigint, pldIsHostFlag: boolean, pldLinksOut: bigint, pldLinksIn: bigint, wasCrawledFlag: boolean]\n"}]},"apps":[],"jobName":"paragraph_1512118601356_855054514","id":"20171006-155148_681542412","dateCreated":"2017-12-01T08:56:41+0000","dateStarted":"2017-12-01T10:46:55+0000","dateFinished":"2017-12-01T11:21:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:207"},{"text":"%pyspark\n\n# Finally, join with the harmonic centrality and page-rank for each domain\n# Note: could probably speed this up using something like above techniques, or by presorting (but we don't really need to since this is only 91Mx91M)\npld_df_joined5=pld_df_joined4.join(pr_df, pr_df.host_rev==pld_df_joined4.PLD, \"leftOuter\").drop(\"host_rev\")\\\n                             .withColumnRenamed(\"#hc_val\",\"HarmonicCentrality\").withColumnRenamed(\"#pr_val\",\"PageRank\")\\\n                             .withColumnRenamed(\"#hc_pos\",\"hc_pos\").withColumnRenamed(\"#pr_pos\",\"pr_pos\")\npld_df_joined4.unpersist()\npld_df_joined5.show(5)\npld_df_joined5.cache()","user":"anonymous","dateUpdated":"2017-12-01T09:56:09+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----+--------------------+--------+-------------+-----------+----------+--------------+--------+------------------+--------+--------------------+\n|  ID|                 PLD|numHosts|pldIsHostFlag|pldLinksOut|pldLinksIn|wasCrawledFlag|  hc_pos|HarmonicCentrality|  pr_pos|            PageRank|\n+----+--------------------+--------+-------------+-----------+----------+--------------+--------+------------------+--------+--------------------+\n| 249|             abc.web|       1|        false|       null|         2|         false|39809624|       1.0002227E7| 1196453|4.388460293087943E-8|\n| 655|             ac.9304|      15|        false|          2|      null|          true|88177703|               0.0|88178056|4.453128013977772E-9|\n|1060|              ac.bgc|       1|        false|       null|         1|         false|55573466|         9141292.0|29165967|5.185063991578718...|\n|1213|          ac.casinos|       1|         true|          2|      null|          true|88177726|               0.0|88178079|4.453128013977772E-9|\n|1357|ac.cosmopolitanun...|       1|         true|       null|        26|         false| 1453253|       1.2345899E7|16730571|6.510118188847429...|\n+----+--------------------+--------+-------------+-----------+----------+--------------+--------+------------------+--------+--------------------+\nonly showing top 5 rows\n\nDataFrame[ID: string, PLD: string, numHosts: bigint, pldIsHostFlag: boolean, pldLinksOut: bigint, pldLinksIn: bigint, wasCrawledFlag: boolean, hc_pos: string, HarmonicCentrality: string, pr_pos: string, PageRank: string]\n"}]},"apps":[],"jobName":"paragraph_1512118601357_854669765","id":"20170929-122540_264490752","dateCreated":"2017-12-01T08:56:41+0000","dateStarted":"2017-12-01T11:04:10+0000","dateFinished":"2017-12-01T11:38:01+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:208"},{"text":"%pyspark\n\n# Save final table to S3 in parquet format, broken into smaller files\noutputURI=\"s3://billsdata.net/CommonCrawl/domain_summaries5new/\"\ncodec=\"org.apache.hadoop.io.compress.GzipCodec\"\n#pld_df_joined5.coalesce(1).write.format('com.databricks.spark.csv').options(header='true', codec=codec).save(outputURI)\npld_df_joined5.write.save(outputURI)","user":"anonymous","dateUpdated":"2017-12-01T12:12:21+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1512118601357_854669765","id":"20170929-123834_882164555","dateCreated":"2017-12-01T08:56:41+0000","dateStarted":"2017-12-01T12:12:21+0000","dateFinished":"2017-12-01T12:33:10+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:209"},{"text":"%pyspark\n\n# Clean up some objects to free memory if needed!\ncount_rdd.unpersist()\ncount_df.unpersist()\nbool_rdd.unpersist()\nbool_df.unpersist()\nin_degrees.unpersist()\nout_degrees.unpersist()\npld_edges_df.unpersist()\npld_bf_distrib.unpersist()\n\n# Encourage a garbage collection!\nimport gc\ncollected = gc.collect()\nprint \"Garbage collector: collected %d objects.\" % collected","user":"anonymous","dateUpdated":"2017-12-01T12:34:01+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Garbage collector: collected 416 objects.\n"}]},"apps":[],"jobName":"paragraph_1512118601357_854669765","id":"20170930-084538_879594277","dateCreated":"2017-12-01T08:56:41+0000","dateStarted":"2017-12-01T12:34:01+0000","dateFinished":"2017-12-01T12:34:01+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:210"},{"text":"%pyspark\n\nfrom pyspark.sql.functions import udf, col, when, lit\ndef reverse_domain(domain):\n    return '.'.join(reversed(domain.split('.')))\nprint(reverse_domain(\"com.facebook.abc\"))\n\nudf_reverse_domain = udf(reverse_domain, StringType())\nsummary_df2=pld_df_joined5.drop(\"ID\").withColumnRenamed(\"PLD\",\"PLD_rev\").withColumn(\"payLevelDomain\",udf_reverse_domain(\"PLD_rev\")).drop(\"PLD_rev\").drop(\"HarmonicCentrality\").drop(\"PageRank\")\nsummary_df2.show(3)\nsummary_df2.cache()","user":"anonymous","dateUpdated":"2017-12-01T12:34:07+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"abc.facebook.com\n+--------+-------------+-----------+----------+--------------+--------+--------+--------------+\n|numHosts|pldIsHostFlag|pldLinksOut|pldLinksIn|wasCrawledFlag|  hc_pos|  pr_pos|payLevelDomain|\n+--------+-------------+-----------+----------+--------------+--------+--------+--------------+\n|       1|        false|       null|         2|         false|39809624| 1196453|       web.abc|\n|      15|        false|          2|      null|          true|88177703|88178056|       9304.ac|\n|       1|        false|       null|         1|         false|55573466|29165967|        bgc.ac|\n+--------+-------------+-----------+----------+--------------+--------+--------+--------------+\nonly showing top 3 rows\n\nDataFrame[numHosts: bigint, pldIsHostFlag: boolean, pldLinksOut: bigint, pldLinksIn: bigint, wasCrawledFlag: boolean, hc_pos: string, pr_pos: string, payLevelDomain: string]\n"}]},"apps":[],"jobName":"paragraph_1512118601357_854669765","id":"20171012-142038_800861977","dateCreated":"2017-12-01T08:56:41+0000","dateStarted":"2017-12-01T12:34:07+0000","dateFinished":"2017-12-01T12:50:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:211"},{"text":"%pyspark\n\n# Convert HC and PR positions to a rank (with 3dp, out of 100, where 100 is the most popular)\nCOUNT=int(93110180) #int(91034128)\ndef rank(pos):\n    return \"{0:.3f}\".format(((COUNT-float(pos))/COUNT)*100)\nprint(rank(1478887)) # random just to test\n\nudf_rank=udf(rank, StringType())\n\nsummary_df3=summary_df2.withColumn(\"hcRank\", udf_rank(\"hc_pos\")).drop(\"hc_pos\").withColumn(\"prRank\", udf_rank(\"pr_pos\")).drop(\"pr_pos\")\nsummary_df2.unpersist()\nsummary_df3.show(3)\nsummary_df3.cache()","user":"anonymous","dateUpdated":"2017-12-01T12:35:14+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"98.412\n+--------+-------------+-----------+----------+--------------+--------------+------+------+\n|numHosts|pldIsHostFlag|pldLinksOut|pldLinksIn|wasCrawledFlag|payLevelDomain|hcRank|prRank|\n+--------+-------------+-----------+----------+--------------+--------------+------+------+\n|       1|        false|       null|         2|         false|       web.abc|57.245|98.715|\n|      15|        false|          2|      null|          true|       9304.ac| 5.297| 5.297|\n|       1|        false|       null|         1|         false|        bgc.ac|40.314|68.676|\n+--------+-------------+-----------+----------+--------------+--------------+------+------+\nonly showing top 3 rows\n\nDataFrame[numHosts: bigint, pldIsHostFlag: boolean, pldLinksOut: bigint, pldLinksIn: bigint, wasCrawledFlag: boolean, payLevelDomain: string, hcRank: string, prRank: string]\n"}]},"apps":[],"jobName":"paragraph_1512118601357_854669765","id":"20171018-084715_2002456320","dateCreated":"2017-12-01T08:56:41+0000","dateStarted":"2017-12-01T12:35:14+0000","dateFinished":"2017-12-01T13:06:37+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:212"},{"text":"%pyspark\n\n# Re-order the columns for final output\nsummary_df4=summary_df3.select(\"payLevelDomain\",\"numHosts\",\"pldIsHostFlag\",\"pldLinksIn\",\"pldLinksOut\",\"wasCrawledFlag\",\"hcRank\",\"prRank\")\nsummary_df3.unpersist()\nsummary_df4.show(3)\nsummary_df4.cache()","user":"anonymous","dateUpdated":"2017-12-01T12:35:17+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------+--------+-------------+----------+-----------+--------------+------+------+\n|payLevelDomain|numHosts|pldIsHostFlag|pldLinksIn|pldLinksOut|wasCrawledFlag|hcRank|prRank|\n+--------------+--------+-------------+----------+-----------+--------------+------+------+\n|       web.abc|       1|        false|         2|       null|         false|57.245|98.715|\n|       9304.ac|      15|        false|      null|          2|          true| 5.297| 5.297|\n|        bgc.ac|       1|        false|         1|       null|         false|40.314|68.676|\n+--------------+--------+-------------+----------+-----------+--------------+------+------+\nonly showing top 3 rows\n\nDataFrame[payLevelDomain: string, numHosts: bigint, pldIsHostFlag: boolean, pldLinksIn: bigint, pldLinksOut: bigint, wasCrawledFlag: boolean, hcRank: string, prRank: string]\n"}]},"apps":[],"jobName":"paragraph_1512118601358_855824011","id":"20171018-162242_1138437034","dateCreated":"2017-12-01T08:56:41+0000","dateStarted":"2017-12-01T12:50:46+0000","dateFinished":"2017-12-01T13:22:32+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:213"},{"text":"%pyspark\n\n# Let's take a look at the final table before saving it\nsummary_df4.sort(\"numHosts\", ascending=False).show(100)","user":"anonymous","dateUpdated":"2017-12-01T12:35:25+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+--------+-------------+----------+-----------+--------------+-------+-------+\n|      payLevelDomain|numHosts|pldIsHostFlag|pldLinksIn|pldLinksOut|wasCrawledFlag| hcRank| prRank|\n+--------------------+--------+-------------+----------+-----------+--------------+-------+-------+\n|             cjb.com|75378730|         true|       408|          3|          true| 99.837| 99.988|\n|           blogus.cn|59220356|         true|        39|       9303|          true| 72.394| 77.135|\n|          lrolaw.com|20509683|         true|         5|         29|          true| 75.843| 77.034|\n|          jdudar.com|20509664|         true|         2|         29|          true| 91.792| 81.154|\n|           mozvo.com|20509654|         true|         6|         29|          true| 91.883| 78.247|\n|        azteccup.com|20509607|         true|       161|        275|          true| 99.356| 97.061|\n|dioceseofsthelena...|20508823|         true|         4|         26|          true| 92.188| 78.005|\n| bootcampbeijing.com|20508781|         true|         2|         25|          true| 46.958| 43.960|\n|   rightmatching.com|20507520|         true|         1|         25|          true| 22.310| 16.209|\n|morgellonssupport...|20507356|         true|        16|         25|          true| 95.959| 84.066|\n|       kmcits420.com|20507350|         true|      null|         25|          true|  4.239|  4.249|\n|  superiorjuegos.com|20507034|         true|        12|         26|          true| 99.418| 95.116|\n|  buckminster076.com|20506719|         true|         8|         26|          true| 84.346| 81.586|\n|barranquillasbest...|20506668|         true|         5|         25|          true| 77.166| 80.168|\n|       marketuno.com|20506267|         true|        34|         25|          true| 95.347| 90.788|\n|  adamkhoowealth.com|20506229|         true|         9|         25|          true| 95.616| 75.860|\n|   livederby2007.com|20506047|         true|        11|         26|          true| 96.794| 93.860|\n|      soleil1987.com|20506000|         true|         1|         25|          true| 43.861| 38.229|\n|         love099.com|20505940|         true|         3|         25|          true| 63.649| 43.175|\n|       interx-me.com|20505807|         true|         7|         25|          true| 76.777| 82.462|\n| james-robertson.com|20505745|         true|         3|         25|          true| 92.814| 58.160|\n|whomadeyoumirabel...|20505455|         true|        10|         26|          true| 90.775| 89.536|\n|        nbreview.com|20505445|         true|        18|         26|          true| 99.634| 96.391|\n|people-bookstore.com|20505409|         true|         5|         25|          true| 92.991| 58.875|\n|      4000351970.com|20505287|         true|         4|         25|          true| 18.217| 72.219|\n|       ubicmedia.com|20504951|         true|        27|         26|          true| 96.417| 90.026|\n|    jianli-muban.com|20504549|         true|      null|         25|          true|  4.283|  4.292|\n|         resmesh.com|20315793|         true|        17|        459|          true| 91.098| 81.317|\n|          hbrush.com|19982648|         true|        15|       3460|          true| 95.602| 85.667|\n|   game-stalkers.com|19897183|         true|        13|         15|          true| 98.268| 97.059|\n|       ioweyouth.com|19760915|         true|        10|         35|          true| 99.469| 95.524|\n|          bbddaa.com|17327420|         true|       309|        278|          true| 74.319| 99.187|\n|          zzjxtz.com|16652847|         true|      null|         29|          true|  3.595|  3.612|\n|          zzmmaa.com|13995992|         true|       248|        278|          true| 72.622| 98.523|\n|     composesite.com|13724658|         true|        68|         20|          true| 77.258| 92.933|\n|           533b8.com|13721487|         true|        12|         24|          true| 86.511| 52.910|\n|      cedarrunhc.com|13412701|         true|         5|         26|          true| 68.262| 59.737|\n|          ssygjy.com|13398432|         true|         1|         30|          true| 17.179|  9.852|\n|        blogspot.com|13106595|         true|   1688721|   15584230|          true|100.000|100.000|\n|          yuce49.com|11300502|         true|       948|        825|          true| 92.111| 98.854|\n|       wordpress.com| 9414108|         true|   1924121|   10395602|          true|100.000|100.000|\n|       w3cdomain.com| 9081962|         true|        29|         12|          true| 95.096| 86.600|\n|           liao1.com| 8103895|         true|       524|         21|          true| 98.883| 99.846|\n| diebestenfilme.club| 8020547|         true|        25|       1878|          true| 67.142| 72.980|\n|getrichandgivebac...| 7945435|         true|         4|         25|          true| 90.591| 43.152|\n|           jnhgy.com| 7716002|         true|         1|         29|          true| 39.866| 23.870|\n|        ltuvitrc.com| 7520063|         true|         5|       6465|          true| 99.246| 94.995|\n|      bumpbabyme.com| 6987303|         true|        23|         25|          true| 94.203| 74.530|\n|         skyrock.com| 6396662|         true|     30034|       8206|          true| 99.999| 99.995|\n|        ipaddress.my| 6321882|         true|        20|          4|          true| 81.572| 98.664|\n|          56link.com| 6207898|         true|         1|         24|          true| 38.446| 27.718|\n|          tumblr.com| 5675158|         true|   1086537|      10073|          true|100.000|100.000|\n|        ourssite.com| 5648707|         true|        73|          6|          true| 86.389| 94.907|\n|   securityscans.org| 5431515|         true|         4|        750|          true| 36.335| 99.196|\n|  natalyaserkova.com| 4851131|         true|         4|         15|          true| 82.428| 42.536|\n|richardson-clarke...| 4760042|         true|         6|         26|          true| 70.163| 61.338|\n|          wwwbfh.com| 4606881|         true|      null|         33|          true|  3.623|  3.640|\n|        chinapic.org| 4504215|         true|         1|         14|          true|  7.990| 24.969|\n|         chinapy.org| 4333712|         true|        11|       1464|          true| 73.175| 83.572|\n|           nxein.com| 4007958|         true|        41|        517|          true| 92.097| 97.212|\n|         googlejk.cn| 3851985|         true|       298|        335|          true| 68.244| 96.087|\n|        caller-id.co| 3717466|         true|         1|          4|          true| 22.481| 80.305|\n|  chinaappletree.com| 3702046|         true|         3|         14|          true| 76.172| 74.618|\n|         valakya.com| 3553425|         true|         7|       3361|          true| 83.730| 50.938|\n|indochinatourpack...| 3534833|         true|         3|         14|          true| 44.068| 30.407|\n|        chinamsg.org| 3445376|         true|        12|       1464|          true| 99.282| 95.414|\n| myweddingdress.club| 3117233|         true|        16|       1517|          true| 64.901| 76.616|\n|      coolgigllc.com| 3076168|         true|         2|          3|          true| 85.436| 97.733|\n|  beijingyourway.com| 3075092|         true|         8|          3|          true| 97.542| 66.425|\n|      chenzopark.com| 3048893|         true|         2|          3|          true| 79.719| 36.413|\n|         chinadn.org| 3008560|         true|        13|       1464|          true| 75.732| 78.793|\n|    dotnetmaniac.com| 2991963|         true|         4|          3|          true| 77.328| 91.909|\n|    friendlyvote.com| 2970574|         true|         8|          3|          true| 76.682| 84.380|\n|           byila.com| 2957410|         true|        16|          5|          true| 93.508| 74.283|\n|         truguru.net| 2905463|         true|        38|       8551|          true| 77.025| 57.756|\n|           hiboor.cn| 2893721|         true|        36|       8519|          true| 81.604| 37.496|\n|         dgcard86.cn| 2890177|         true|        45|       8529|          true| 89.482| 56.102|\n|hangzhougrandthea...| 2889134|         true|        45|       8532|          true| 84.798| 78.092|\n|           cityou.cn| 2886429|         true|        39|       8585|          true| 69.771| 48.394|\n|        177apple.com| 2885747|         true|        47|       8543|          true| 72.591| 66.985|\n| declan-galbraith.cn| 2882655|         true|        41|       8528|          true| 92.299| 68.727|\n|          zts007.com| 2880273|         true|        54|       8511|          true| 90.363| 54.063|\n|           9ganxi.cn| 2879207|         true|        38|       8541|          true| 77.321| 91.764|\n|       sleekbitz.com| 2878649|         true|        40|       8572|          true| 65.623| 69.774|\n|        hollerado.cn| 2873203|         true|        41|       8537|          true| 81.945| 57.254|\n|          4124240.cn| 2871003|         true|       464|       7203|          true| 29.004| 86.600|\n|         devlcsc.net| 2866197|         true|        39|       8551|          true| 69.911| 43.273|\n|         w3snoop.com| 2837947|         true|       341|         18|          true| 99.930| 99.847|\n|         wcbrand.com| 2800407|         true|        43|          6|          true| 72.795| 84.726|\n|       sre-music.com| 2762599|         true|        52|       8565|          true| 95.997| 68.563|\n|       apps-cafe.com| 2761396|         true|        76|       8512|          true| 95.940| 95.588|\n|      taiyingled.com| 2756403|         true|        57|       8495|          true| 64.519| 61.361|\n|            yhmmo.cn| 2658741|         true|        40|       8561|          true| 57.862| 30.273|\n|          rc-seo.com| 2573137|         true|         1|          4|          true| 22.088| 34.103|\n|barrosalgadosanta...| 2562089|         true|        57|         15|          true| 91.394| 85.390|\n|         6thmega.com| 2557014|         true|      2336|       5490|          true| 95.242| 97.179|\n|    geosynthetics.cn| 2439624|         true|         3|         16|          true| 99.226| 95.114|\n|     moodforums.club| 2369974|         true|         8|        325|          true| 68.193| 59.723|\n|      mikeaitken.com| 2323707|         true|      2314|       5490|          true| 96.294| 96.693|\n|         vancarr.com| 2298825|         true|      2302|       5490|          true| 97.663| 97.164|\n+--------------------+--------+-------------+----------+-----------+--------------+-------+-------+\nonly showing top 100 rows\n\n"}]},"apps":[],"jobName":"paragraph_1512118601358_855824011","id":"20171018-160102_1527600638","dateCreated":"2017-12-01T08:56:41+0000","dateStarted":"2017-12-01T13:06:37+0000","dateFinished":"2017-12-01T13:39:07+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:214"},{"text":"%pyspark\n\n# Save final table to S3 in compressed CSV format, broken into smaller files\noutputURI=\"s3://billsdata.net/CommonCrawl/domain_summaries7new/\"\ncodec=\"org.apache.hadoop.io.compress.GzipCodec\"\nsummary_df4.coalesce(10).write.format('com.databricks.spark.csv').options(header='true', codec=codec).save(outputURI)","user":"anonymous","dateUpdated":"2017-12-01T12:35:31+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1512118601358_855824011","id":"20171018-085036_2082191695","dateCreated":"2017-12-01T08:56:41+0000","dateStarted":"2017-12-01T13:22:32+0000","dateFinished":"2017-12-01T13:40:00+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:215"},{"text":"%pyspark\n","dateUpdated":"2017-12-01T08:56:41+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1512118601358_855824011","id":"20171018-175711_441001507","dateCreated":"2017-12-01T08:56:41+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:216"}],"name":"Paul 5 - faster domain summary","id":"2D379U3RE","angularObjects":{"2BRWU4WXC:shared_process":[],"2AM1YV5CU:shared_process":[],"2AJXGMUUJ:shared_process":[],"2ANGGHHMQ:shared_process":[],"2AKK3QQXU:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}