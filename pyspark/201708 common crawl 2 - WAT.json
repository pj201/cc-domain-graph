{"paragraphs":[{"text":"%md\n\n<h1>Playing with WAT files</h1>\n\nSee <a href=\"http://tech.marksblogg.com/petabytes-of-website-data-spark-emr.html\">Analysing Petabytes of Websites</a>...","user":"anonymous","dateUpdated":"2017-08-28T12:58:18+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h1>Playing with WAT files</h1>\n<p>See <a href=\"http: //tech.marksblogg.com/petabytes-of-website-data-spark-emr.html\">Analysing Petabytes of Websites</a>&hellip;</p>\n"}]},"apps":[],"jobName":"paragraph_1503916339935_126952524","id":"20170820-140025_400652258","dateCreated":"2017-08-28T10:32:19+0000","dateStarted":"2017-08-28T12:58:18+0000","dateFinished":"2017-08-28T12:58:18+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:6295"},{"text":"%pyspark\n\nimport boto\nfrom boto.s3.key import Key\nfrom gzipstream import GzipStreamFile\nfrom pyspark.sql.types import *\nimport warc\n\nimport json\n\nwatlist = sc.textFile(\"s3://commoncrawl/crawl-data/CC-MAIN-2017-04/wat.paths.gz\")\nwatlist.cache()\nwatlist.count()","user":"anonymous","dateUpdated":"2017-08-28T10:49:32+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"57800\n"}]},"apps":[],"jobName":"paragraph_1503916339937_112332066","id":"20170819-124213_1974489716","dateCreated":"2017-08-28T10:32:19+0000","dateStarted":"2017-08-28T10:49:32+0000","dateFinished":"2017-08-28T10:49:32+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6297"},{"text":"%pyspark\n\nfor f in watlist.take(10):\n    print(f)\n\nconn = boto.connect_s3(anon=True, host='s3.amazonaws.com')\nbucket = conn.get_bucket('commoncrawl')\n\ndef unpack(uri):\n    key_ = Key(bucket, uri)\n    file_ = warc.WARCFile(fileobj=GzipStreamFile(key_))\n    return file_","user":"anonymous","dateUpdated":"2017-08-28T10:50:15+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"crawl-data/CC-MAIN-2017-04/segments/1484560279169.4/wat/CC-MAIN-20170116095119-00000-ip-10-171-10-70.ec2.internal.warc.wat.gz\ncrawl-data/CC-MAIN-2017-04/segments/1484560279169.4/wat/CC-MAIN-20170116095119-00001-ip-10-171-10-70.ec2.internal.warc.wat.gz\ncrawl-data/CC-MAIN-2017-04/segments/1484560279169.4/wat/CC-MAIN-20170116095119-00002-ip-10-171-10-70.ec2.internal.warc.wat.gz\ncrawl-data/CC-MAIN-2017-04/segments/1484560279169.4/wat/CC-MAIN-20170116095119-00003-ip-10-171-10-70.ec2.internal.warc.wat.gz\ncrawl-data/CC-MAIN-2017-04/segments/1484560279169.4/wat/CC-MAIN-20170116095119-00004-ip-10-171-10-70.ec2.internal.warc.wat.gz\ncrawl-data/CC-MAIN-2017-04/segments/1484560279169.4/wat/CC-MAIN-20170116095119-00005-ip-10-171-10-70.ec2.internal.warc.wat.gz\ncrawl-data/CC-MAIN-2017-04/segments/1484560279169.4/wat/CC-MAIN-20170116095119-00006-ip-10-171-10-70.ec2.internal.warc.wat.gz\ncrawl-data/CC-MAIN-2017-04/segments/1484560279169.4/wat/CC-MAIN-20170116095119-00007-ip-10-171-10-70.ec2.internal.warc.wat.gz\ncrawl-data/CC-MAIN-2017-04/segments/1484560279169.4/wat/CC-MAIN-20170116095119-00008-ip-10-171-10-70.ec2.internal.warc.wat.gz\ncrawl-data/CC-MAIN-2017-04/segments/1484560279169.4/wat/CC-MAIN-20170116095119-00009-ip-10-171-10-70.ec2.internal.warc.wat.gz\n"}]},"apps":[],"jobName":"paragraph_1503916339937_112332066","id":"20170820-140453_2045047930","dateCreated":"2017-08-28T10:32:19+0000","dateStarted":"2017-08-28T10:50:15+0000","dateFinished":"2017-08-28T10:50:15+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6298"},{"text":"%pyspark\n\ndef mapper(uri):\n    file = unpack(uri)\n    return [record['Content-Type'] for record in file]\n\nnfiles = 1\nfiles = sc.parallelize(watlist.take(nfiles))\n\nct = files.flatMap(mapper)\nct.cache()\nprint(ct.count())\nprint(ct.countByValue())\nct.unpersist()","user":"anonymous","dateUpdated":"2017-08-28T10:50:17+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"162875\ndefaultdict(<type 'int'>, {'application/warc-fields': 1, 'application/json': 162874})\nPythonRDD[15] at RDD at PythonRDD.scala:48\n"}]},"apps":[],"jobName":"paragraph_1503916339938_113486312","id":"20170820-140454_227101098","dateCreated":"2017-08-28T10:32:19+0000","dateStarted":"2017-08-28T10:50:17+0000","dateFinished":"2017-08-28T10:50:42+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6299"},{"text":"%md\n\nThis took 6 mins on 6 nodes for 100 files -- so ~20 seconds/node/file. So for 57800 files, about 300 hours/node. \nThis corresponds to the fact that WAT files are about a third the size of WARC files.\n\nWe can do this a little more efficiently using <tt>mapPartionsWithIndex()</tt>:","dateUpdated":"2017-08-28T10:32:19+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>This took 6 mins on 6 nodes for 100 files &ndash; so ~20 seconds/node/file. So for 57800 files, about 300 hours/node.\n<br  />This corresponds to the fact that WAT files are about a third the size of WARC files.</p>\n<p>We can do this a little more efficiently using <tt>mapPartionsWithIndex()</tt>:</p>\n"}]},"apps":[],"jobName":"paragraph_1503916339938_113486312","id":"20170820-155117_2054419191","dateCreated":"2017-08-28T10:32:19+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6300"},{"text":"%pyspark\n\ndef mapper(id_, iterator):\n    for uri in iterator:\n        file = unpack(uri)\n        for record in file:\n            try:\n                yield record['Content-Type']\n            except:\n                yield None\n\nnfiles = 1\nfiles = sc.parallelize(watlist.take(nfiles))\n\nct = files.mapPartitionsWithIndex(mapper)\nct.cache()\nprint(ct.count())\nprint(ct.countByValue())\nct.unpersist()","user":"anonymous","dateUpdated":"2017-08-28T10:54:48+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"162875\ndefaultdict(<type 'int'>, {'application/warc-fields': 1, 'application/json': 162874})\nPythonRDD[20] at RDD at PythonRDD.scala:48\n"}]},"apps":[],"jobName":"paragraph_1503917488009_-715210268","id":"20170828-105128_290074644","dateCreated":"2017-08-28T10:51:28+0000","dateStarted":"2017-08-28T10:54:48+0000","dateFinished":"2017-08-28T10:55:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6301"},{"text":"%md\n\nHere's a toy example with <tt>mapPartionsWithIndex()</tt>:","dateUpdated":"2017-08-28T10:32:19+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>Here's a toy example with <tt>mapPartionsWithIndex()</tt>:</p>\n"}]},"apps":[],"jobName":"paragraph_1503916339938_113486312","id":"20170822-191541_1569367408","dateCreated":"2017-08-28T10:32:19+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6302"},{"text":"%pyspark\n\nfrom __future__ import print_function\n\nprint(nfiles, \"files\")\n\ndef f(splitIndex, iterator): yield splitIndex\nprint(files.mapPartitionsWithIndex(f).collect())","user":"anonymous","dateUpdated":"2017-08-28T10:56:35+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"1 files\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223]\n"}]},"apps":[],"jobName":"paragraph_1503916339939_113101564","id":"20170822-191547_1210345221","dateCreated":"2017-08-28T10:32:19+0000","dateStarted":"2017-08-28T10:56:35+0000","dateFinished":"2017-08-28T10:56:37+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6303"},{"text":"%md\n\nLet's inspect the WARC-fields first (one per file):","dateUpdated":"2017-08-28T10:32:19+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>Let's inspect the WARC-fields first (one per file):</p>\n"}]},"apps":[],"jobName":"paragraph_1503916339939_113101564","id":"20170822-183412_1009589514","dateCreated":"2017-08-28T10:32:19+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6304"},{"text":"%pyspark\n\ndef mapper(id_, iterator):\n    for uri in iterator:\n        file = unpack(uri)\n        for record in file:\n            try:\n                if record['Content-Type'] == 'application/warc-fields':\n                    record = json.loads(record.payload.read())\n                    yield record\n            except:\n                yield None\n\nfiles.mapPartitionsWithIndex(mapper).collect()","user":"anonymous","dateUpdated":"2017-08-28T11:03:13+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[None]\n"}]},"apps":[],"jobName":"paragraph_1503916339939_113101564","id":"20170820-140453_450646410","dateCreated":"2017-08-28T10:32:19+0000","dateStarted":"2017-08-28T11:03:13+0000","dateFinished":"2017-08-28T11:03:38+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6305"},{"text":"%md\n\nAnd the json records: first, let's reproduce Litwintschik's server count:","dateUpdated":"2017-08-28T10:32:19+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>And the json records: first, let's reproduce Litwintschik's server count:</p>\n"}]},"apps":[],"jobName":"paragraph_1503916339939_113101564","id":"20170821-184251_270002324","dateCreated":"2017-08-28T10:32:19+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6306"},{"text":"%pyspark\n\nfrom __future__ import print_function\n\ndef get_servers(id_, iterator):\n\n    for uri in iterator:\n        \n        file = unpack(uri)\n        for record in file:\n            if record['Content-Type'] == 'application/json':\n                record = json.loads(record.payload.read())\n\n                try:\n                    yield record['Envelope']\\\n                                ['Payload-Metadata']\\\n                                ['HTTP-Response-Metadata']\\\n                                ['Headers']\\\n                                ['Server'].strip().lower()\n                except KeyError:\n                    yield None\n\nservers = files.mapPartitionsWithIndex(get_servers)\\\n               .map(lambda x: (x,1))\\\n               .reduceByKey(lambda x,y: x+y)\nservers.cache()\n\n\"\"\"\n... or use\nservers = files.mapPartitionsWithSplit(get_servers).countByValue()\n... which will return a lust\n\"\"\"\n\nprint(\"Servers:\", servers.count())","user":"anonymous","dateUpdated":"2017-08-28T11:22:35+0000","config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Servers: 1840\n"}]},"apps":[],"jobName":"paragraph_1503916339939_113101564","id":"20170821-184254_1132389217","dateCreated":"2017-08-28T10:32:19+0000","dateStarted":"2017-08-28T11:22:24+0000","dateFinished":"2017-08-28T11:22:25+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6307"},{"text":"%pyspark\n\nfrom __future__ import print_function\n\nn = 20\n\ntop_n = servers.sortBy(lambda x: -x[1]).take(n)\nfor x in top_n:\n    print(x[1], x[0])","user":"anonymous","dateUpdated":"2017-08-28T11:23:17+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"112661 None\n10166 apache\n8536 nginx\n4674 cloudflare-nginx\n2330 microsoft-iis/7.5\n1750 microsoft-iis/8.5\n1258 gse\n1113 nginx/1.10.2\n886 apache/2.2.15 (centos)\n818 nginx/1.6.2\n786 nginx/1.10.1\n716 apache-coyote/1.1\n644 apache/2.4.7 (ubuntu)\n574 apache/2\n573 microsoft-iis/8.0\n537 nginx/1.8.0\n514 litespeed\n464 microsoft-iis/6.0\n452 nginx/1.4.6 (ubuntu)\n416 apache/2.2.22 (debian)\n"}]},"apps":[],"jobName":"paragraph_1503916339940_111177819","id":"20170821-184254_637437935","dateCreated":"2017-08-28T10:32:19+0000","dateStarted":"2017-08-28T11:23:17+0000","dateFinished":"2017-08-28T11:23:20+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6308"},{"text":"%md\n\nLet's aggregate out the version numbers:","dateUpdated":"2017-08-28T10:32:19+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>Let's aggregate out the version numbers:</p>\n"}]},"apps":[],"jobName":"paragraph_1503916339940_111177819","id":"20170822-193150_1858664995","dateCreated":"2017-08-28T10:32:19+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6309"},{"text":"%pyspark\n\nfrom __future__ import print_function\n\ndef stem(str): \n    if str==None: return \"None\"\n    try:\n        return str.split('/')[0]\n    except KeyError:\n        return str\n\nn = 20\ntop_n = servers.map(lambda p: [stem(p[0]), p[1]]).reduceByKey(lambda x, y: x + y).sortBy(lambda x: -x[1]).take(n)\nfor x in top_n:\n    print(x[1], x[0])","user":"anonymous","dateUpdated":"2017-08-28T11:24:08+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"112661 None\n18054 apache\n15409 nginx\n5508 microsoft-iis\n4674 cloudflare-nginx\n1258 gse\n716 apache-coyote\n514 litespeed\n197 openresty\n165 cowboy\n148 ats\n119 kayak\n113 tengine\n110 lighttpd\n97 sucuri\n91 pws\n85 nginx admin\n83 qrator\n78 instart\n70 yunjiasu-nginx\n"}]},"apps":[],"jobName":"paragraph_1503916339940_111177819","id":"20170822-191958_966854291","dateCreated":"2017-08-28T10:32:19+0000","dateStarted":"2017-08-28T11:24:08+0000","dateFinished":"2017-08-28T11:24:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6310"},{"text":"%pyspark\n","dateUpdated":"2017-08-28T10:32:19+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1503916339951_108484577","id":"20170827-125500_1579378887","dateCreated":"2017-08-28T10:32:19+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6311"}],"name":"201708 common crawl 2 - WAT","id":"2CRPW6JTD","angularObjects":{"2BRWU4WXC:shared_process":[],"2AM1YV5CU:shared_process":[],"2AJXGMUUJ:shared_process":[],"2ANGGHHMQ:shared_process":[],"2AKK3QQXU:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}